//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var FilmActor = newFilmActorTable()

type filmActorTable struct {
	postgres.Table

	//Columns
	ActorID    postgres.ColumnInteger
	FilmID     postgres.ColumnInteger
	LastUpdate postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type FilmActorTable struct {
	filmActorTable

	EXCLUDED filmActorTable
}

// AS creates new FilmActorTable with assigned alias
func (a *FilmActorTable) AS(alias string) *FilmActorTable {
	aliasTable := newFilmActorTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newFilmActorTable() *FilmActorTable {
	return &FilmActorTable{
		filmActorTable: newFilmActorTableImpl("dvds", "film_actor"),
		EXCLUDED:       newFilmActorTableImpl("", "excluded"),
	}
}

func newFilmActorTableImpl(schemaName, tableName string) filmActorTable {
	var (
		ActorIDColumn    = postgres.IntegerColumn("actor_id")
		FilmIDColumn     = postgres.IntegerColumn("film_id")
		LastUpdateColumn = postgres.TimestampColumn("last_update")
		allColumns       = postgres.ColumnList{ActorIDColumn, FilmIDColumn, LastUpdateColumn}
		mutableColumns   = postgres.ColumnList{LastUpdateColumn}
	)

	return filmActorTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		ActorID:    ActorIDColumn,
		FilmID:     FilmIDColumn,
		LastUpdate: LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
