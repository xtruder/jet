// Code generated by testparrot. DO NOT EDIT.

package mysql

import (
	gotestparrot "github.com/xtruder/go-testparrot"
	"time"
)

func init() {
	gotestparrot.R.Load("TestCast", []gotestparrot.Recording{{
		Key: 0,
		Value: `
SELECT CAST(? AS CHAR CHARACTER SET utf8) AS "AS1",
     CAST(? AS DATE) AS "date1",
     CAST(? AS TIME) AS "time",
     CAST(? AS DATETIME) AS "datetime",
     CAST(? AS CHAR) AS "char1",
     CAST(? AS CHAR(30)) AS "char2",
     CAST((? - ?) AS SIGNED) AS "signed",
     CAST((? + ?) AS UNSIGNED) AS "unsigned",
     CAST(? AS BINARY) AS "binary"
FROM test_sample.all_types;
`,
	}, {
		Key:   1,
		Value: []interface{}{"test", "2011-02-02", "14:06:10", "2011-02-02 14:06:10", int64(150), int64(150), int64(5), int64(10), int64(5), int64(10), "Some text"},
	}, {
		Key: 2,
		Value: struct {
			As1      string
			Date1    time.Time
			Time     time.Time
			DateTime time.Time
			Char1    string
			Char2    string
			Signed   int
			Unsigned int
			Binary   string
		}{
			As1:      "test",
			Binary:   "Some text",
			Char1:    "150",
			Char2:    "150",
			Date1:    gotestparrot.Decode("2011-02-02T00:00:00Z", time.Time{}).(time.Time),
			DateTime: gotestparrot.Decode("2011-02-02T14:06:10Z", time.Time{}).(time.Time),
			Signed:   -5,
			Time:     gotestparrot.Decode("0000-01-01T14:06:10Z", time.Time{}).(time.Time),
			Unsigned: 15,
		},
	}})
}
