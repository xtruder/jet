// Code generated by testparrot. DO NOT EDIT.

package postgres

import (
	model "github.com/go-jet/jet/v2/tests/postgres/gen/northwind/model"
	gotestparrot "github.com/xtruder/go-testparrot"
	"time"
)

func init() {
	gotestparrot.R.Load("TestNorthwindJoinEverything", []gotestparrot.Recording{{
		Key: 0,
		Value: `
SELECT customers.customer_id AS "customers.customer_id",
     customers.company_name AS "customers.company_name",
     customers.contact_name AS "customers.contact_name",
     customers.contact_title AS "customers.contact_title",
     customers.address AS "customers.address",
     customers.city AS "customers.city",
     customers.region AS "customers.region",
     customers.postal_code AS "customers.postal_code",
     customers.country AS "customers.country",
     customers.phone AS "customers.phone",
     customers.fax AS "customers.fax",
     customer_demographics.customer_type_id AS "customer_demographics.customer_type_id",
     customer_demographics.customer_desc AS "customer_demographics.customer_desc",
     orders.order_id AS "orders.order_id",
     orders.customer_id AS "orders.customer_id",
     orders.employee_id AS "orders.employee_id",
     orders.order_date AS "orders.order_date",
     orders.required_date AS "orders.required_date",
     orders.shipped_date AS "orders.shipped_date",
     orders.ship_via AS "orders.ship_via",
     orders.freight AS "orders.freight",
     orders.ship_name AS "orders.ship_name",
     orders.ship_address AS "orders.ship_address",
     orders.ship_city AS "orders.ship_city",
     orders.ship_region AS "orders.ship_region",
     orders.ship_postal_code AS "orders.ship_postal_code",
     orders.ship_country AS "orders.ship_country",
     shippers.shipper_id AS "shippers.shipper_id",
     shippers.company_name AS "shippers.company_name",
     shippers.phone AS "shippers.phone",
     order_details.order_id AS "order_details.order_id",
     order_details.product_id AS "order_details.product_id",
     order_details.unit_price AS "order_details.unit_price",
     order_details.quantity AS "order_details.quantity",
     order_details.discount AS "order_details.discount",
     products.product_id AS "products.product_id",
     products.product_name AS "products.product_name",
     products.supplier_id AS "products.supplier_id",
     products.category_id AS "products.category_id",
     products.quantity_per_unit AS "products.quantity_per_unit",
     products.unit_price AS "products.unit_price",
     products.units_in_stock AS "products.units_in_stock",
     products.units_on_order AS "products.units_on_order",
     products.reorder_level AS "products.reorder_level",
     products.discontinued AS "products.discontinued",
     categories.category_id AS "categories.category_id",
     categories.category_name AS "categories.category_name",
     categories.description AS "categories.description",
     categories.picture AS "categories.picture",
     suppliers.supplier_id AS "suppliers.supplier_id",
     suppliers.company_name AS "suppliers.company_name",
     suppliers.contact_name AS "suppliers.contact_name",
     suppliers.contact_title AS "suppliers.contact_title",
     suppliers.address AS "suppliers.address",
     suppliers.city AS "suppliers.city",
     suppliers.region AS "suppliers.region",
     suppliers.postal_code AS "suppliers.postal_code",
     suppliers.country AS "suppliers.country",
     suppliers.phone AS "suppliers.phone",
     suppliers.fax AS "suppliers.fax",
     suppliers.homepage AS "suppliers.homepage"
FROM northwind.customers
     LEFT JOIN northwind.customer_customer_demo ON (customers.customer_id = customer_customer_demo.customer_id)
     LEFT JOIN northwind.customer_demographics ON (customer_customer_demo.customer_type_id = customer_demographics.customer_type_id)
     LEFT JOIN northwind.orders ON (orders.customer_id = customers.customer_id)
     LEFT JOIN northwind.shippers ON (orders.ship_via = shippers.shipper_id)
     LEFT JOIN northwind.order_details ON (orders.order_id = order_details.order_id)
     LEFT JOIN northwind.products ON (order_details.product_id = products.product_id)
     LEFT JOIN northwind.categories ON (products.category_id = categories.category_id)
     LEFT JOIN northwind.suppliers ON (products.supplier_id = suppliers.supplier_id)
     LEFT JOIN northwind.employees ON (orders.employee_id = employees.employee_id)
     LEFT JOIN northwind.employee_territories ON (employee_territories.employee_id = employees.employee_id)
     LEFT JOIN northwind.territories ON (employee_territories.territory_id = territories.territory_id)
     LEFT JOIN northwind.region ON (territories.region_id = region.region_id)
ORDER BY customers.customer_id, orders.order_id, products.product_id;
`,
	}, {
		Key: 1,
		Value: struct {
			model.Customers
			Demographics model.CustomerDemographics
			Orders       []struct {
				model.Orders
				Shipper model.Shippers
				Details struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}
			}
		}{
			Customers: model.Customers{
				Address:      gotestparrot.Ptr("Obere Str. 57").(*string),
				City:         gotestparrot.Ptr("Berlin").(*string),
				CompanyName:  "Alfreds Futterkiste",
				ContactName:  gotestparrot.Ptr("Maria Anders").(*string),
				ContactTitle: gotestparrot.Ptr("Sales Representative").(*string),
				Country:      gotestparrot.Ptr("Germany").(*string),
				CustomerID:   "ALFKI",
				Fax:          gotestparrot.Ptr("030-0076545").(*string),
				Phone:        gotestparrot.Ptr("030-0074321").(*string),
				PostalCode:   gotestparrot.Ptr("12209").(*string),
			},
			Orders: []struct {
				model.Orders
				Shipper model.Shippers
				Details struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}
			}{{
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						Discount:  float32(0.25),
						OrderID:   int16(10643),
						ProductID: int16(28),
						Quantity:  int16(15),
						UnitPrice: float32(45.6),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(7),
							CategoryName: "Produce",
							Description:  gotestparrot.Ptr("Dried fruit and bean curd").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(7)).(*int16),
							Discontinued:    int32(1),
							ProductID:       int16(28),
							ProductName:     "Rössle Sauerkraut",
							QuantityPerUnit: gotestparrot.Ptr("25 - 825 g cans").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(0)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(12)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(45.6)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(26)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("Bogenallee 51").(*string),
							City:         gotestparrot.Ptr("Frankfurt").(*string),
							CompanyName:  "Plutzer Lebensmittelgroßmärkte AG",
							ContactName:  gotestparrot.Ptr("Martin Bein").(*string),
							ContactTitle: gotestparrot.Ptr("International Marketing Mgr.").(*string),
							Country:      gotestparrot.Ptr("Germany").(*string),
							Homepage:     gotestparrot.Ptr("Plutzer (on the World Wide Web)#http://www.microsoft.com/accessdev/sampleapps/plutzer.htm#").(*string),
							Phone:        gotestparrot.Ptr("(069) 992755").(*string),
							PostalCode:   gotestparrot.Ptr("60439").(*string),
							SupplierID:   int16(12),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("ALFKI").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(6)).(*int16),
					Freight:        gotestparrot.Ptr(float32(29.46)).(*float32),
					OrderDate:      gotestparrot.Decode("1997-08-25T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10643),
					RequiredDate:   gotestparrot.Decode("1997-09-22T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("Obere Str. 57").(*string),
					ShipCity:       gotestparrot.Ptr("Berlin").(*string),
					ShipCountry:    gotestparrot.Ptr("Germany").(*string),
					ShipName:       gotestparrot.Ptr("Alfreds Futterkiste").(*string),
					ShipPostalCode: gotestparrot.Ptr("12209").(*string),
					ShipVia:        gotestparrot.Ptr(int16(1)).(*int16),
					ShippedDate:    gotestparrot.Decode("1997-09-02T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "Speedy Express",
					Phone:       gotestparrot.Ptr("(503) 555-9831").(*string),
					ShipperID:   int16(1),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						Discount:  float32(0.25),
						OrderID:   int16(10643),
						ProductID: int16(39),
						Quantity:  int16(21),
						UnitPrice: float32(18),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(1),
							CategoryName: "Beverages",
							Description:  gotestparrot.Ptr("Soft drinks, coffees, teas, beers, and ales").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(1)).(*int16),
							ProductID:       int16(39),
							ProductName:     "Chartreuse verte",
							QuantityPerUnit: gotestparrot.Ptr("750 cc per bottle").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(5)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(18)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(18)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(69)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("203, Rue des Francs-Bourgeois").(*string),
							City:         gotestparrot.Ptr("Paris").(*string),
							CompanyName:  "Aux joyeux ecclésiastiques",
							ContactName:  gotestparrot.Ptr("Guylène Nodier").(*string),
							ContactTitle: gotestparrot.Ptr("Sales Manager").(*string),
							Country:      gotestparrot.Ptr("France").(*string),
							Fax:          gotestparrot.Ptr("(1) 03.83.00.62").(*string),
							Phone:        gotestparrot.Ptr("(1) 03.83.00.68").(*string),
							PostalCode:   gotestparrot.Ptr("75004").(*string),
							SupplierID:   int16(18),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("ALFKI").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(6)).(*int16),
					Freight:        gotestparrot.Ptr(float32(29.46)).(*float32),
					OrderDate:      gotestparrot.Decode("1997-08-25T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10643),
					RequiredDate:   gotestparrot.Decode("1997-09-22T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("Obere Str. 57").(*string),
					ShipCity:       gotestparrot.Ptr("Berlin").(*string),
					ShipCountry:    gotestparrot.Ptr("Germany").(*string),
					ShipName:       gotestparrot.Ptr("Alfreds Futterkiste").(*string),
					ShipPostalCode: gotestparrot.Ptr("12209").(*string),
					ShipVia:        gotestparrot.Ptr(int16(1)).(*int16),
					ShippedDate:    gotestparrot.Decode("1997-09-02T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "Speedy Express",
					Phone:       gotestparrot.Ptr("(503) 555-9831").(*string),
					ShipperID:   int16(1),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						Discount:  float32(0.25),
						OrderID:   int16(10643),
						ProductID: int16(46),
						Quantity:  int16(2),
						UnitPrice: float32(12),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(8),
							CategoryName: "Seafood",
							Description:  gotestparrot.Ptr("Seaweed and fish").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(8)).(*int16),
							ProductID:       int16(46),
							ProductName:     "Spegesild",
							QuantityPerUnit: gotestparrot.Ptr("4 - 450 g glasses").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(0)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(21)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(12)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(95)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("Lyngbysild Fiskebakken 10").(*string),
							City:         gotestparrot.Ptr("Lyngby").(*string),
							CompanyName:  "Lyngbysild",
							ContactName:  gotestparrot.Ptr("Niels Petersen").(*string),
							ContactTitle: gotestparrot.Ptr("Sales Manager").(*string),
							Country:      gotestparrot.Ptr("Denmark").(*string),
							Fax:          gotestparrot.Ptr("43844115").(*string),
							Phone:        gotestparrot.Ptr("43844108").(*string),
							PostalCode:   gotestparrot.Ptr("2800").(*string),
							SupplierID:   int16(21),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("ALFKI").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(6)).(*int16),
					Freight:        gotestparrot.Ptr(float32(29.46)).(*float32),
					OrderDate:      gotestparrot.Decode("1997-08-25T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10643),
					RequiredDate:   gotestparrot.Decode("1997-09-22T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("Obere Str. 57").(*string),
					ShipCity:       gotestparrot.Ptr("Berlin").(*string),
					ShipCountry:    gotestparrot.Ptr("Germany").(*string),
					ShipName:       gotestparrot.Ptr("Alfreds Futterkiste").(*string),
					ShipPostalCode: gotestparrot.Ptr("12209").(*string),
					ShipVia:        gotestparrot.Ptr(int16(1)).(*int16),
					ShippedDate:    gotestparrot.Decode("1997-09-02T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "Speedy Express",
					Phone:       gotestparrot.Ptr("(503) 555-9831").(*string),
					ShipperID:   int16(1),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(10692),
						ProductID: int16(63),
						Quantity:  int16(20),
						UnitPrice: float32(43.9),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(2),
							CategoryName: "Condiments",
							Description:  gotestparrot.Ptr("Sweet and savory sauces, relishes, spreads, and seasonings").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(2)).(*int16),
							ProductID:       int16(63),
							ProductName:     "Vegie-spread",
							QuantityPerUnit: gotestparrot.Ptr("15 - 625 g jars").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(5)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(7)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(43.9)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(24)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("74 Rose St. Moonie Ponds").(*string),
							City:         gotestparrot.Ptr("Melbourne").(*string),
							CompanyName:  "Pavlova, Ltd.",
							ContactName:  gotestparrot.Ptr("Ian Devling").(*string),
							ContactTitle: gotestparrot.Ptr("Marketing Manager").(*string),
							Country:      gotestparrot.Ptr("Australia").(*string),
							Fax:          gotestparrot.Ptr("(03) 444-6588").(*string),
							Phone:        gotestparrot.Ptr("(03) 444-2343").(*string),
							PostalCode:   gotestparrot.Ptr("3058").(*string),
							Region:       gotestparrot.Ptr("Victoria").(*string),
							SupplierID:   int16(7),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("ALFKI").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(4)).(*int16),
					Freight:        gotestparrot.Ptr(float32(61.02)).(*float32),
					OrderDate:      gotestparrot.Decode("1997-10-03T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10692),
					RequiredDate:   gotestparrot.Decode("1997-10-31T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("Obere Str. 57").(*string),
					ShipCity:       gotestparrot.Ptr("Berlin").(*string),
					ShipCountry:    gotestparrot.Ptr("Germany").(*string),
					ShipName:       gotestparrot.Ptr("Alfred's Futterkiste").(*string),
					ShipPostalCode: gotestparrot.Ptr("12209").(*string),
					ShipVia:        gotestparrot.Ptr(int16(2)).(*int16),
					ShippedDate:    gotestparrot.Decode("1997-10-13T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "United Package",
					Phone:       gotestparrot.Ptr("(503) 555-3199").(*string),
					ShipperID:   int16(2),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(10702),
						ProductID: int16(3),
						Quantity:  int16(6),
						UnitPrice: float32(10),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(2),
							CategoryName: "Condiments",
							Description:  gotestparrot.Ptr("Sweet and savory sauces, relishes, spreads, and seasonings").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(2)).(*int16),
							ProductID:       int16(3),
							ProductName:     "Aniseed Syrup",
							QuantityPerUnit: gotestparrot.Ptr("12 - 550 ml bottles").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(25)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(1)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(10)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(13)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(70)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("49 Gilbert St.").(*string),
							City:         gotestparrot.Ptr("London").(*string),
							CompanyName:  "Exotic Liquids",
							ContactName:  gotestparrot.Ptr("Charlotte Cooper").(*string),
							ContactTitle: gotestparrot.Ptr("Purchasing Manager").(*string),
							Country:      gotestparrot.Ptr("UK").(*string),
							Phone:        gotestparrot.Ptr("(171) 555-2222").(*string),
							PostalCode:   gotestparrot.Ptr("EC1 4SD").(*string),
							SupplierID:   int16(1),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("ALFKI").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(4)).(*int16),
					Freight:        gotestparrot.Ptr(float32(23.94)).(*float32),
					OrderDate:      gotestparrot.Decode("1997-10-13T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10702),
					RequiredDate:   gotestparrot.Decode("1997-11-24T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("Obere Str. 57").(*string),
					ShipCity:       gotestparrot.Ptr("Berlin").(*string),
					ShipCountry:    gotestparrot.Ptr("Germany").(*string),
					ShipName:       gotestparrot.Ptr("Alfred's Futterkiste").(*string),
					ShipPostalCode: gotestparrot.Ptr("12209").(*string),
					ShipVia:        gotestparrot.Ptr(int16(1)).(*int16),
					ShippedDate:    gotestparrot.Decode("1997-10-21T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "Speedy Express",
					Phone:       gotestparrot.Ptr("(503) 555-9831").(*string),
					ShipperID:   int16(1),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(10702),
						ProductID: int16(76),
						Quantity:  int16(15),
						UnitPrice: float32(18),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(1),
							CategoryName: "Beverages",
							Description:  gotestparrot.Ptr("Soft drinks, coffees, teas, beers, and ales").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(1)).(*int16),
							ProductID:       int16(76),
							ProductName:     "Lakkalikööri",
							QuantityPerUnit: gotestparrot.Ptr("500 ml").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(20)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(23)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(18)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(57)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("Valtakatu 12").(*string),
							City:         gotestparrot.Ptr("Lappeenranta").(*string),
							CompanyName:  "Karkki Oy",
							ContactName:  gotestparrot.Ptr("Anne Heikkonen").(*string),
							ContactTitle: gotestparrot.Ptr("Product Manager").(*string),
							Country:      gotestparrot.Ptr("Finland").(*string),
							Phone:        gotestparrot.Ptr("(953) 10956").(*string),
							PostalCode:   gotestparrot.Ptr("53120").(*string),
							SupplierID:   int16(23),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("ALFKI").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(4)).(*int16),
					Freight:        gotestparrot.Ptr(float32(23.94)).(*float32),
					OrderDate:      gotestparrot.Decode("1997-10-13T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10702),
					RequiredDate:   gotestparrot.Decode("1997-11-24T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("Obere Str. 57").(*string),
					ShipCity:       gotestparrot.Ptr("Berlin").(*string),
					ShipCountry:    gotestparrot.Ptr("Germany").(*string),
					ShipName:       gotestparrot.Ptr("Alfred's Futterkiste").(*string),
					ShipPostalCode: gotestparrot.Ptr("12209").(*string),
					ShipVia:        gotestparrot.Ptr(int16(1)).(*int16),
					ShippedDate:    gotestparrot.Decode("1997-10-21T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "Speedy Express",
					Phone:       gotestparrot.Ptr("(503) 555-9831").(*string),
					ShipperID:   int16(1),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(10835),
						ProductID: int16(59),
						Quantity:  int16(15),
						UnitPrice: float32(55),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(4),
							CategoryName: "Dairy Products",
							Description:  gotestparrot.Ptr("Cheeses").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(4)).(*int16),
							ProductID:       int16(59),
							ProductName:     "Raclette Courdavault",
							QuantityPerUnit: gotestparrot.Ptr("5 kg pkg.").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(0)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(28)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(55)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(79)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("Bat. B 3, rue des Alpes").(*string),
							City:         gotestparrot.Ptr("Annecy").(*string),
							CompanyName:  "Gai pâturage",
							ContactName:  gotestparrot.Ptr("Eliane Noz").(*string),
							ContactTitle: gotestparrot.Ptr("Sales Representative").(*string),
							Country:      gotestparrot.Ptr("France").(*string),
							Fax:          gotestparrot.Ptr("38.76.98.58").(*string),
							Phone:        gotestparrot.Ptr("38.76.98.06").(*string),
							PostalCode:   gotestparrot.Ptr("74000").(*string),
							SupplierID:   int16(28),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("ALFKI").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(1)).(*int16),
					Freight:        gotestparrot.Ptr(float32(69.53)).(*float32),
					OrderDate:      gotestparrot.Decode("1998-01-15T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10835),
					RequiredDate:   gotestparrot.Decode("1998-02-12T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("Obere Str. 57").(*string),
					ShipCity:       gotestparrot.Ptr("Berlin").(*string),
					ShipCountry:    gotestparrot.Ptr("Germany").(*string),
					ShipName:       gotestparrot.Ptr("Alfred's Futterkiste").(*string),
					ShipPostalCode: gotestparrot.Ptr("12209").(*string),
					ShipVia:        gotestparrot.Ptr(int16(3)).(*int16),
					ShippedDate:    gotestparrot.Decode("1998-01-21T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "Federal Shipping",
					Phone:       gotestparrot.Ptr("(503) 555-9931").(*string),
					ShipperID:   int16(3),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						Discount:  float32(0.2),
						OrderID:   int16(10835),
						ProductID: int16(77),
						Quantity:  int16(2),
						UnitPrice: float32(13),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(2),
							CategoryName: "Condiments",
							Description:  gotestparrot.Ptr("Sweet and savory sauces, relishes, spreads, and seasonings").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(2)).(*int16),
							ProductID:       int16(77),
							ProductName:     "Original Frankfurter grüne Soße",
							QuantityPerUnit: gotestparrot.Ptr("12 boxes").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(15)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(12)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(13)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(32)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("Bogenallee 51").(*string),
							City:         gotestparrot.Ptr("Frankfurt").(*string),
							CompanyName:  "Plutzer Lebensmittelgroßmärkte AG",
							ContactName:  gotestparrot.Ptr("Martin Bein").(*string),
							ContactTitle: gotestparrot.Ptr("International Marketing Mgr.").(*string),
							Country:      gotestparrot.Ptr("Germany").(*string),
							Homepage:     gotestparrot.Ptr("Plutzer (on the World Wide Web)#http://www.microsoft.com/accessdev/sampleapps/plutzer.htm#").(*string),
							Phone:        gotestparrot.Ptr("(069) 992755").(*string),
							PostalCode:   gotestparrot.Ptr("60439").(*string),
							SupplierID:   int16(12),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("ALFKI").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(1)).(*int16),
					Freight:        gotestparrot.Ptr(float32(69.53)).(*float32),
					OrderDate:      gotestparrot.Decode("1998-01-15T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10835),
					RequiredDate:   gotestparrot.Decode("1998-02-12T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("Obere Str. 57").(*string),
					ShipCity:       gotestparrot.Ptr("Berlin").(*string),
					ShipCountry:    gotestparrot.Ptr("Germany").(*string),
					ShipName:       gotestparrot.Ptr("Alfred's Futterkiste").(*string),
					ShipPostalCode: gotestparrot.Ptr("12209").(*string),
					ShipVia:        gotestparrot.Ptr(int16(3)).(*int16),
					ShippedDate:    gotestparrot.Decode("1998-01-21T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "Federal Shipping",
					Phone:       gotestparrot.Ptr("(503) 555-9931").(*string),
					ShipperID:   int16(3),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						Discount:  float32(0.05),
						OrderID:   int16(10952),
						ProductID: int16(6),
						Quantity:  int16(16),
						UnitPrice: float32(25),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(2),
							CategoryName: "Condiments",
							Description:  gotestparrot.Ptr("Sweet and savory sauces, relishes, spreads, and seasonings").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(2)).(*int16),
							ProductID:       int16(6),
							ProductName:     "Grandma's Boysenberry Spread",
							QuantityPerUnit: gotestparrot.Ptr("12 - 8 oz jars").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(25)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(3)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(25)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(120)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("707 Oxford Rd.").(*string),
							City:         gotestparrot.Ptr("Ann Arbor").(*string),
							CompanyName:  "Grandma Kelly's Homestead",
							ContactName:  gotestparrot.Ptr("Regina Murphy").(*string),
							ContactTitle: gotestparrot.Ptr("Sales Representative").(*string),
							Country:      gotestparrot.Ptr("USA").(*string),
							Fax:          gotestparrot.Ptr("(313) 555-3349").(*string),
							Phone:        gotestparrot.Ptr("(313) 555-5735").(*string),
							PostalCode:   gotestparrot.Ptr("48104").(*string),
							Region:       gotestparrot.Ptr("MI").(*string),
							SupplierID:   int16(3),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("ALFKI").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(1)).(*int16),
					Freight:        gotestparrot.Ptr(float32(40.42)).(*float32),
					OrderDate:      gotestparrot.Decode("1998-03-16T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10952),
					RequiredDate:   gotestparrot.Decode("1998-04-27T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("Obere Str. 57").(*string),
					ShipCity:       gotestparrot.Ptr("Berlin").(*string),
					ShipCountry:    gotestparrot.Ptr("Germany").(*string),
					ShipName:       gotestparrot.Ptr("Alfred's Futterkiste").(*string),
					ShipPostalCode: gotestparrot.Ptr("12209").(*string),
					ShipVia:        gotestparrot.Ptr(int16(1)).(*int16),
					ShippedDate:    gotestparrot.Decode("1998-03-24T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "Speedy Express",
					Phone:       gotestparrot.Ptr("(503) 555-9831").(*string),
					ShipperID:   int16(1),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(10952),
						ProductID: int16(28),
						Quantity:  int16(2),
						UnitPrice: float32(45.6),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(7),
							CategoryName: "Produce",
							Description:  gotestparrot.Ptr("Dried fruit and bean curd").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(7)).(*int16),
							Discontinued:    int32(1),
							ProductID:       int16(28),
							ProductName:     "Rössle Sauerkraut",
							QuantityPerUnit: gotestparrot.Ptr("25 - 825 g cans").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(0)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(12)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(45.6)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(26)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("Bogenallee 51").(*string),
							City:         gotestparrot.Ptr("Frankfurt").(*string),
							CompanyName:  "Plutzer Lebensmittelgroßmärkte AG",
							ContactName:  gotestparrot.Ptr("Martin Bein").(*string),
							ContactTitle: gotestparrot.Ptr("International Marketing Mgr.").(*string),
							Country:      gotestparrot.Ptr("Germany").(*string),
							Homepage:     gotestparrot.Ptr("Plutzer (on the World Wide Web)#http://www.microsoft.com/accessdev/sampleapps/plutzer.htm#").(*string),
							Phone:        gotestparrot.Ptr("(069) 992755").(*string),
							PostalCode:   gotestparrot.Ptr("60439").(*string),
							SupplierID:   int16(12),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("ALFKI").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(1)).(*int16),
					Freight:        gotestparrot.Ptr(float32(40.42)).(*float32),
					OrderDate:      gotestparrot.Decode("1998-03-16T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10952),
					RequiredDate:   gotestparrot.Decode("1998-04-27T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("Obere Str. 57").(*string),
					ShipCity:       gotestparrot.Ptr("Berlin").(*string),
					ShipCountry:    gotestparrot.Ptr("Germany").(*string),
					ShipName:       gotestparrot.Ptr("Alfred's Futterkiste").(*string),
					ShipPostalCode: gotestparrot.Ptr("12209").(*string),
					ShipVia:        gotestparrot.Ptr(int16(1)).(*int16),
					ShippedDate:    gotestparrot.Decode("1998-03-24T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "Speedy Express",
					Phone:       gotestparrot.Ptr("(503) 555-9831").(*string),
					ShipperID:   int16(1),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						Discount:  float32(0.05),
						OrderID:   int16(11011),
						ProductID: int16(58),
						Quantity:  int16(40),
						UnitPrice: float32(13.25),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(8),
							CategoryName: "Seafood",
							Description:  gotestparrot.Ptr("Seaweed and fish").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(8)).(*int16),
							ProductID:       int16(58),
							ProductName:     "Escargots de Bourgogne",
							QuantityPerUnit: gotestparrot.Ptr("24 pieces").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(20)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(27)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(13.25)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(62)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("22, rue H. Voiron").(*string),
							City:         gotestparrot.Ptr("Montceau").(*string),
							CompanyName:  "Escargots Nouveaux",
							ContactName:  gotestparrot.Ptr("Marie Delamare").(*string),
							ContactTitle: gotestparrot.Ptr("Sales Manager").(*string),
							Country:      gotestparrot.Ptr("France").(*string),
							Phone:        gotestparrot.Ptr("85.57.00.07").(*string),
							PostalCode:   gotestparrot.Ptr("71300").(*string),
							SupplierID:   int16(27),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("ALFKI").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(3)).(*int16),
					Freight:        gotestparrot.Ptr(float32(1.21)).(*float32),
					OrderDate:      gotestparrot.Decode("1998-04-09T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(11011),
					RequiredDate:   gotestparrot.Decode("1998-05-07T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("Obere Str. 57").(*string),
					ShipCity:       gotestparrot.Ptr("Berlin").(*string),
					ShipCountry:    gotestparrot.Ptr("Germany").(*string),
					ShipName:       gotestparrot.Ptr("Alfred's Futterkiste").(*string),
					ShipPostalCode: gotestparrot.Ptr("12209").(*string),
					ShipVia:        gotestparrot.Ptr(int16(1)).(*int16),
					ShippedDate:    gotestparrot.Decode("1998-04-13T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "Speedy Express",
					Phone:       gotestparrot.Ptr("(503) 555-9831").(*string),
					ShipperID:   int16(1),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(11011),
						ProductID: int16(71),
						Quantity:  int16(20),
						UnitPrice: float32(21.5),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(4),
							CategoryName: "Dairy Products",
							Description:  gotestparrot.Ptr("Cheeses").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(4)).(*int16),
							ProductID:       int16(71),
							ProductName:     "Flotemysost",
							QuantityPerUnit: gotestparrot.Ptr("10 - 500 g pkgs.").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(0)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(15)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(21.5)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(26)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("Hatlevegen 5").(*string),
							City:         gotestparrot.Ptr("Sandvika").(*string),
							CompanyName:  "Norske Meierier",
							ContactName:  gotestparrot.Ptr("Beate Vileid").(*string),
							ContactTitle: gotestparrot.Ptr("Marketing Manager").(*string),
							Country:      gotestparrot.Ptr("Norway").(*string),
							Phone:        gotestparrot.Ptr("(0)2-953010").(*string),
							PostalCode:   gotestparrot.Ptr("1320").(*string),
							SupplierID:   int16(15),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("ALFKI").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(3)).(*int16),
					Freight:        gotestparrot.Ptr(float32(1.21)).(*float32),
					OrderDate:      gotestparrot.Decode("1998-04-09T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(11011),
					RequiredDate:   gotestparrot.Decode("1998-05-07T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("Obere Str. 57").(*string),
					ShipCity:       gotestparrot.Ptr("Berlin").(*string),
					ShipCountry:    gotestparrot.Ptr("Germany").(*string),
					ShipName:       gotestparrot.Ptr("Alfred's Futterkiste").(*string),
					ShipPostalCode: gotestparrot.Ptr("12209").(*string),
					ShipVia:        gotestparrot.Ptr(int16(1)).(*int16),
					ShippedDate:    gotestparrot.Decode("1998-04-13T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "Speedy Express",
					Phone:       gotestparrot.Ptr("(503) 555-9831").(*string),
					ShipperID:   int16(1),
				},
			}},
		},
	}, {
		Key: 2,
		Value: struct {
			model.Customers
			Demographics model.CustomerDemographics
			Orders       []struct {
				model.Orders
				Shipper model.Shippers
				Details struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}
			}
		}{
			Customers: model.Customers{
				Address:      gotestparrot.Ptr("ul. Filtrowa 68").(*string),
				City:         gotestparrot.Ptr("Warszawa").(*string),
				CompanyName:  "Wolski  Zajazd",
				ContactName:  gotestparrot.Ptr("Zbyszek Piestrzeniewicz").(*string),
				ContactTitle: gotestparrot.Ptr("Owner").(*string),
				Country:      gotestparrot.Ptr("Poland").(*string),
				CustomerID:   "WOLZA",
				Fax:          gotestparrot.Ptr("(26) 642-7012").(*string),
				Phone:        gotestparrot.Ptr("(26) 642-7012").(*string),
				PostalCode:   gotestparrot.Ptr("01-012").(*string),
			},
			Orders: []struct {
				model.Orders
				Shipper model.Shippers
				Details struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}
			}{{
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(10374),
						ProductID: int16(31),
						Quantity:  int16(30),
						UnitPrice: float32(10),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(4),
							CategoryName: "Dairy Products",
							Description:  gotestparrot.Ptr("Cheeses").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(4)).(*int16),
							ProductID:       int16(31),
							ProductName:     "Gorgonzola Telino",
							QuantityPerUnit: gotestparrot.Ptr("12 - 100 g pkgs").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(20)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(14)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(12.5)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(0)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(70)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("Viale Dante, 75").(*string),
							City:         gotestparrot.Ptr("Ravenna").(*string),
							CompanyName:  "Formaggi Fortini s.r.l.",
							ContactName:  gotestparrot.Ptr("Elio Rossi").(*string),
							ContactTitle: gotestparrot.Ptr("Sales Representative").(*string),
							Country:      gotestparrot.Ptr("Italy").(*string),
							Fax:          gotestparrot.Ptr("(0544) 60603").(*string),
							Homepage:     gotestparrot.Ptr("#FORMAGGI.HTM#").(*string),
							Phone:        gotestparrot.Ptr("(0544) 60323").(*string),
							PostalCode:   gotestparrot.Ptr("48100").(*string),
							SupplierID:   int16(14),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("WOLZA").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(1)).(*int16),
					Freight:        gotestparrot.Ptr(float32(3.94)).(*float32),
					OrderDate:      gotestparrot.Decode("1996-12-05T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10374),
					RequiredDate:   gotestparrot.Decode("1997-01-02T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("ul. Filtrowa 68").(*string),
					ShipCity:       gotestparrot.Ptr("Warszawa").(*string),
					ShipCountry:    gotestparrot.Ptr("Poland").(*string),
					ShipName:       gotestparrot.Ptr("Wolski Zajazd").(*string),
					ShipPostalCode: gotestparrot.Ptr("01-012").(*string),
					ShipVia:        gotestparrot.Ptr(int16(3)).(*int16),
					ShippedDate:    gotestparrot.Decode("1996-12-09T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "Federal Shipping",
					Phone:       gotestparrot.Ptr("(503) 555-9931").(*string),
					ShipperID:   int16(3),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(10374),
						ProductID: int16(58),
						Quantity:  int16(15),
						UnitPrice: float32(10.6),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(8),
							CategoryName: "Seafood",
							Description:  gotestparrot.Ptr("Seaweed and fish").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(8)).(*int16),
							ProductID:       int16(58),
							ProductName:     "Escargots de Bourgogne",
							QuantityPerUnit: gotestparrot.Ptr("24 pieces").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(20)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(27)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(13.25)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(62)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("22, rue H. Voiron").(*string),
							City:         gotestparrot.Ptr("Montceau").(*string),
							CompanyName:  "Escargots Nouveaux",
							ContactName:  gotestparrot.Ptr("Marie Delamare").(*string),
							ContactTitle: gotestparrot.Ptr("Sales Manager").(*string),
							Country:      gotestparrot.Ptr("France").(*string),
							Phone:        gotestparrot.Ptr("85.57.00.07").(*string),
							PostalCode:   gotestparrot.Ptr("71300").(*string),
							SupplierID:   int16(27),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("WOLZA").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(1)).(*int16),
					Freight:        gotestparrot.Ptr(float32(3.94)).(*float32),
					OrderDate:      gotestparrot.Decode("1996-12-05T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10374),
					RequiredDate:   gotestparrot.Decode("1997-01-02T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("ul. Filtrowa 68").(*string),
					ShipCity:       gotestparrot.Ptr("Warszawa").(*string),
					ShipCountry:    gotestparrot.Ptr("Poland").(*string),
					ShipName:       gotestparrot.Ptr("Wolski Zajazd").(*string),
					ShipPostalCode: gotestparrot.Ptr("01-012").(*string),
					ShipVia:        gotestparrot.Ptr(int16(3)).(*int16),
					ShippedDate:    gotestparrot.Decode("1996-12-09T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "Federal Shipping",
					Phone:       gotestparrot.Ptr("(503) 555-9931").(*string),
					ShipperID:   int16(3),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(10611),
						ProductID: int16(1),
						Quantity:  int16(6),
						UnitPrice: float32(18),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(1),
							CategoryName: "Beverages",
							Description:  gotestparrot.Ptr("Soft drinks, coffees, teas, beers, and ales").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(1)).(*int16),
							Discontinued:    int32(1),
							ProductID:       int16(1),
							ProductName:     "Chai",
							QuantityPerUnit: gotestparrot.Ptr("10 boxes x 30 bags").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(10)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(8)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(18)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(39)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("29 King's Way").(*string),
							City:         gotestparrot.Ptr("Manchester").(*string),
							CompanyName:  "Specialty Biscuits, Ltd.",
							ContactName:  gotestparrot.Ptr("Peter Wilson").(*string),
							ContactTitle: gotestparrot.Ptr("Sales Representative").(*string),
							Country:      gotestparrot.Ptr("UK").(*string),
							Phone:        gotestparrot.Ptr("(161) 555-4448").(*string),
							PostalCode:   gotestparrot.Ptr("M14 GSD").(*string),
							SupplierID:   int16(8),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("WOLZA").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(6)).(*int16),
					Freight:        gotestparrot.Ptr(float32(80.65)).(*float32),
					OrderDate:      gotestparrot.Decode("1997-07-25T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10611),
					RequiredDate:   gotestparrot.Decode("1997-08-22T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("ul. Filtrowa 68").(*string),
					ShipCity:       gotestparrot.Ptr("Warszawa").(*string),
					ShipCountry:    gotestparrot.Ptr("Poland").(*string),
					ShipName:       gotestparrot.Ptr("Wolski Zajazd").(*string),
					ShipPostalCode: gotestparrot.Ptr("01-012").(*string),
					ShipVia:        gotestparrot.Ptr(int16(2)).(*int16),
					ShippedDate:    gotestparrot.Decode("1997-08-01T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "United Package",
					Phone:       gotestparrot.Ptr("(503) 555-3199").(*string),
					ShipperID:   int16(2),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(10611),
						ProductID: int16(2),
						Quantity:  int16(10),
						UnitPrice: float32(19),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(1),
							CategoryName: "Beverages",
							Description:  gotestparrot.Ptr("Soft drinks, coffees, teas, beers, and ales").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(1)).(*int16),
							Discontinued:    int32(1),
							ProductID:       int16(2),
							ProductName:     "Chang",
							QuantityPerUnit: gotestparrot.Ptr("24 - 12 oz bottles").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(25)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(1)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(19)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(17)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(40)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("49 Gilbert St.").(*string),
							City:         gotestparrot.Ptr("London").(*string),
							CompanyName:  "Exotic Liquids",
							ContactName:  gotestparrot.Ptr("Charlotte Cooper").(*string),
							ContactTitle: gotestparrot.Ptr("Purchasing Manager").(*string),
							Country:      gotestparrot.Ptr("UK").(*string),
							Phone:        gotestparrot.Ptr("(171) 555-2222").(*string),
							PostalCode:   gotestparrot.Ptr("EC1 4SD").(*string),
							SupplierID:   int16(1),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("WOLZA").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(6)).(*int16),
					Freight:        gotestparrot.Ptr(float32(80.65)).(*float32),
					OrderDate:      gotestparrot.Decode("1997-07-25T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10611),
					RequiredDate:   gotestparrot.Decode("1997-08-22T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("ul. Filtrowa 68").(*string),
					ShipCity:       gotestparrot.Ptr("Warszawa").(*string),
					ShipCountry:    gotestparrot.Ptr("Poland").(*string),
					ShipName:       gotestparrot.Ptr("Wolski Zajazd").(*string),
					ShipPostalCode: gotestparrot.Ptr("01-012").(*string),
					ShipVia:        gotestparrot.Ptr(int16(2)).(*int16),
					ShippedDate:    gotestparrot.Decode("1997-08-01T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "United Package",
					Phone:       gotestparrot.Ptr("(503) 555-3199").(*string),
					ShipperID:   int16(2),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(10611),
						ProductID: int16(60),
						Quantity:  int16(15),
						UnitPrice: float32(34),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(4),
							CategoryName: "Dairy Products",
							Description:  gotestparrot.Ptr("Cheeses").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(4)).(*int16),
							ProductID:       int16(60),
							ProductName:     "Camembert Pierrot",
							QuantityPerUnit: gotestparrot.Ptr("15 - 300 g rounds").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(0)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(28)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(34)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(19)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("Bat. B 3, rue des Alpes").(*string),
							City:         gotestparrot.Ptr("Annecy").(*string),
							CompanyName:  "Gai pâturage",
							ContactName:  gotestparrot.Ptr("Eliane Noz").(*string),
							ContactTitle: gotestparrot.Ptr("Sales Representative").(*string),
							Country:      gotestparrot.Ptr("France").(*string),
							Fax:          gotestparrot.Ptr("38.76.98.58").(*string),
							Phone:        gotestparrot.Ptr("38.76.98.06").(*string),
							PostalCode:   gotestparrot.Ptr("74000").(*string),
							SupplierID:   int16(28),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("WOLZA").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(6)).(*int16),
					Freight:        gotestparrot.Ptr(float32(80.65)).(*float32),
					OrderDate:      gotestparrot.Decode("1997-07-25T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10611),
					RequiredDate:   gotestparrot.Decode("1997-08-22T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("ul. Filtrowa 68").(*string),
					ShipCity:       gotestparrot.Ptr("Warszawa").(*string),
					ShipCountry:    gotestparrot.Ptr("Poland").(*string),
					ShipName:       gotestparrot.Ptr("Wolski Zajazd").(*string),
					ShipPostalCode: gotestparrot.Ptr("01-012").(*string),
					ShipVia:        gotestparrot.Ptr(int16(2)).(*int16),
					ShippedDate:    gotestparrot.Decode("1997-08-01T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "United Package",
					Phone:       gotestparrot.Ptr("(503) 555-3199").(*string),
					ShipperID:   int16(2),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(10792),
						ProductID: int16(2),
						Quantity:  int16(10),
						UnitPrice: float32(19),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(1),
							CategoryName: "Beverages",
							Description:  gotestparrot.Ptr("Soft drinks, coffees, teas, beers, and ales").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(1)).(*int16),
							Discontinued:    int32(1),
							ProductID:       int16(2),
							ProductName:     "Chang",
							QuantityPerUnit: gotestparrot.Ptr("24 - 12 oz bottles").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(25)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(1)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(19)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(17)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(40)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("49 Gilbert St.").(*string),
							City:         gotestparrot.Ptr("London").(*string),
							CompanyName:  "Exotic Liquids",
							ContactName:  gotestparrot.Ptr("Charlotte Cooper").(*string),
							ContactTitle: gotestparrot.Ptr("Purchasing Manager").(*string),
							Country:      gotestparrot.Ptr("UK").(*string),
							Phone:        gotestparrot.Ptr("(171) 555-2222").(*string),
							PostalCode:   gotestparrot.Ptr("EC1 4SD").(*string),
							SupplierID:   int16(1),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("WOLZA").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(1)).(*int16),
					Freight:        gotestparrot.Ptr(float32(23.79)).(*float32),
					OrderDate:      gotestparrot.Decode("1997-12-23T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10792),
					RequiredDate:   gotestparrot.Decode("1998-01-20T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("ul. Filtrowa 68").(*string),
					ShipCity:       gotestparrot.Ptr("Warszawa").(*string),
					ShipCountry:    gotestparrot.Ptr("Poland").(*string),
					ShipName:       gotestparrot.Ptr("Wolski Zajazd").(*string),
					ShipPostalCode: gotestparrot.Ptr("01-012").(*string),
					ShipVia:        gotestparrot.Ptr(int16(3)).(*int16),
					ShippedDate:    gotestparrot.Decode("1997-12-31T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "Federal Shipping",
					Phone:       gotestparrot.Ptr("(503) 555-9931").(*string),
					ShipperID:   int16(3),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(10792),
						ProductID: int16(54),
						Quantity:  int16(3),
						UnitPrice: float32(7.45),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(6),
							CategoryName: "Meat/Poultry",
							Description:  gotestparrot.Ptr("Prepared meats").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(6)).(*int16),
							ProductID:       int16(54),
							ProductName:     "Tourtière",
							QuantityPerUnit: gotestparrot.Ptr("16 pies").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(10)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(25)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(7.45)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(21)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("2960 Rue St. Laurent").(*string),
							City:         gotestparrot.Ptr("Montréal").(*string),
							CompanyName:  "Ma Maison",
							ContactName:  gotestparrot.Ptr("Jean-Guy Lauzon").(*string),
							ContactTitle: gotestparrot.Ptr("Marketing Manager").(*string),
							Country:      gotestparrot.Ptr("Canada").(*string),
							Phone:        gotestparrot.Ptr("(514) 555-9022").(*string),
							PostalCode:   gotestparrot.Ptr("H1J 1C3").(*string),
							Region:       gotestparrot.Ptr("Québec").(*string),
							SupplierID:   int16(25),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("WOLZA").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(1)).(*int16),
					Freight:        gotestparrot.Ptr(float32(23.79)).(*float32),
					OrderDate:      gotestparrot.Decode("1997-12-23T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10792),
					RequiredDate:   gotestparrot.Decode("1998-01-20T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("ul. Filtrowa 68").(*string),
					ShipCity:       gotestparrot.Ptr("Warszawa").(*string),
					ShipCountry:    gotestparrot.Ptr("Poland").(*string),
					ShipName:       gotestparrot.Ptr("Wolski Zajazd").(*string),
					ShipPostalCode: gotestparrot.Ptr("01-012").(*string),
					ShipVia:        gotestparrot.Ptr(int16(3)).(*int16),
					ShippedDate:    gotestparrot.Decode("1997-12-31T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "Federal Shipping",
					Phone:       gotestparrot.Ptr("(503) 555-9931").(*string),
					ShipperID:   int16(3),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(10792),
						ProductID: int16(68),
						Quantity:  int16(15),
						UnitPrice: float32(12.5),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(3),
							CategoryName: "Confections",
							Description:  gotestparrot.Ptr("Desserts, candies, and sweet breads").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(3)).(*int16),
							ProductID:       int16(68),
							ProductName:     "Scottish Longbreads",
							QuantityPerUnit: gotestparrot.Ptr("10 boxes x 8 pieces").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(15)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(8)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(12.5)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(6)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(10)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("29 King's Way").(*string),
							City:         gotestparrot.Ptr("Manchester").(*string),
							CompanyName:  "Specialty Biscuits, Ltd.",
							ContactName:  gotestparrot.Ptr("Peter Wilson").(*string),
							ContactTitle: gotestparrot.Ptr("Sales Representative").(*string),
							Country:      gotestparrot.Ptr("UK").(*string),
							Phone:        gotestparrot.Ptr("(161) 555-4448").(*string),
							PostalCode:   gotestparrot.Ptr("M14 GSD").(*string),
							SupplierID:   int16(8),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("WOLZA").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(1)).(*int16),
					Freight:        gotestparrot.Ptr(float32(23.79)).(*float32),
					OrderDate:      gotestparrot.Decode("1997-12-23T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10792),
					RequiredDate:   gotestparrot.Decode("1998-01-20T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("ul. Filtrowa 68").(*string),
					ShipCity:       gotestparrot.Ptr("Warszawa").(*string),
					ShipCountry:    gotestparrot.Ptr("Poland").(*string),
					ShipName:       gotestparrot.Ptr("Wolski Zajazd").(*string),
					ShipPostalCode: gotestparrot.Ptr("01-012").(*string),
					ShipVia:        gotestparrot.Ptr(int16(3)).(*int16),
					ShippedDate:    gotestparrot.Decode("1997-12-31T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "Federal Shipping",
					Phone:       gotestparrot.Ptr("(503) 555-9931").(*string),
					ShipperID:   int16(3),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(10870),
						ProductID: int16(35),
						Quantity:  int16(3),
						UnitPrice: float32(18),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(1),
							CategoryName: "Beverages",
							Description:  gotestparrot.Ptr("Soft drinks, coffees, teas, beers, and ales").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(1)).(*int16),
							ProductID:       int16(35),
							ProductName:     "Steeleye Stout",
							QuantityPerUnit: gotestparrot.Ptr("24 - 12 oz bottles").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(15)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(16)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(18)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(20)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("3400 - 8th Avenue Suite 210").(*string),
							City:         gotestparrot.Ptr("Bend").(*string),
							CompanyName:  "Bigfoot Breweries",
							ContactName:  gotestparrot.Ptr("Cheryl Saylor").(*string),
							ContactTitle: gotestparrot.Ptr("Regional Account Rep.").(*string),
							Country:      gotestparrot.Ptr("USA").(*string),
							Phone:        gotestparrot.Ptr("(503) 555-9931").(*string),
							PostalCode:   gotestparrot.Ptr("97101").(*string),
							Region:       gotestparrot.Ptr("OR").(*string),
							SupplierID:   int16(16),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("WOLZA").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(5)).(*int16),
					Freight:        gotestparrot.Ptr(float32(12.04)).(*float32),
					OrderDate:      gotestparrot.Decode("1998-02-04T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10870),
					RequiredDate:   gotestparrot.Decode("1998-03-04T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("ul. Filtrowa 68").(*string),
					ShipCity:       gotestparrot.Ptr("Warszawa").(*string),
					ShipCountry:    gotestparrot.Ptr("Poland").(*string),
					ShipName:       gotestparrot.Ptr("Wolski Zajazd").(*string),
					ShipPostalCode: gotestparrot.Ptr("01-012").(*string),
					ShipVia:        gotestparrot.Ptr(int16(3)).(*int16),
					ShippedDate:    gotestparrot.Decode("1998-02-13T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "Federal Shipping",
					Phone:       gotestparrot.Ptr("(503) 555-9931").(*string),
					ShipperID:   int16(3),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(10870),
						ProductID: int16(51),
						Quantity:  int16(2),
						UnitPrice: float32(53),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(7),
							CategoryName: "Produce",
							Description:  gotestparrot.Ptr("Dried fruit and bean curd").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(7)).(*int16),
							ProductID:       int16(51),
							ProductName:     "Manjimup Dried Apples",
							QuantityPerUnit: gotestparrot.Ptr("50 - 300 g pkgs.").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(10)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(24)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(53)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(20)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("170 Prince Edward Parade Hunter's Hill").(*string),
							City:         gotestparrot.Ptr("Sydney").(*string),
							CompanyName:  "G'day, Mate",
							ContactName:  gotestparrot.Ptr("Wendy Mackenzie").(*string),
							ContactTitle: gotestparrot.Ptr("Sales Representative").(*string),
							Country:      gotestparrot.Ptr("Australia").(*string),
							Fax:          gotestparrot.Ptr("(02) 555-4873").(*string),
							Homepage:     gotestparrot.Ptr("G'day Mate (on the World Wide Web)#http://www.microsoft.com/accessdev/sampleapps/gdaymate.htm#").(*string),
							Phone:        gotestparrot.Ptr("(02) 555-5914").(*string),
							PostalCode:   gotestparrot.Ptr("2042").(*string),
							Region:       gotestparrot.Ptr("NSW").(*string),
							SupplierID:   int16(24),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("WOLZA").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(5)).(*int16),
					Freight:        gotestparrot.Ptr(float32(12.04)).(*float32),
					OrderDate:      gotestparrot.Decode("1998-02-04T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10870),
					RequiredDate:   gotestparrot.Decode("1998-03-04T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("ul. Filtrowa 68").(*string),
					ShipCity:       gotestparrot.Ptr("Warszawa").(*string),
					ShipCountry:    gotestparrot.Ptr("Poland").(*string),
					ShipName:       gotestparrot.Ptr("Wolski Zajazd").(*string),
					ShipPostalCode: gotestparrot.Ptr("01-012").(*string),
					ShipVia:        gotestparrot.Ptr(int16(3)).(*int16),
					ShippedDate:    gotestparrot.Decode("1998-02-13T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "Federal Shipping",
					Phone:       gotestparrot.Ptr("(503) 555-9931").(*string),
					ShipperID:   int16(3),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(10906),
						ProductID: int16(61),
						Quantity:  int16(15),
						UnitPrice: float32(28.5),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(2),
							CategoryName: "Condiments",
							Description:  gotestparrot.Ptr("Sweet and savory sauces, relishes, spreads, and seasonings").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(2)).(*int16),
							ProductID:       int16(61),
							ProductName:     "Sirop d'érable",
							QuantityPerUnit: gotestparrot.Ptr("24 - 500 ml bottles").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(25)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(29)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(28.5)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(113)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("148 rue Chasseur").(*string),
							City:         gotestparrot.Ptr("Ste-Hyacinthe").(*string),
							CompanyName:  "Forêts d'érables",
							ContactName:  gotestparrot.Ptr("Chantal Goulet").(*string),
							ContactTitle: gotestparrot.Ptr("Accounting Manager").(*string),
							Country:      gotestparrot.Ptr("Canada").(*string),
							Fax:          gotestparrot.Ptr("(514) 555-2921").(*string),
							Phone:        gotestparrot.Ptr("(514) 555-2955").(*string),
							PostalCode:   gotestparrot.Ptr("J2S 7S8").(*string),
							Region:       gotestparrot.Ptr("Québec").(*string),
							SupplierID:   int16(29),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("WOLZA").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(4)).(*int16),
					Freight:        gotestparrot.Ptr(float32(26.29)).(*float32),
					OrderDate:      gotestparrot.Decode("1998-02-25T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10906),
					RequiredDate:   gotestparrot.Decode("1998-03-11T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("ul. Filtrowa 68").(*string),
					ShipCity:       gotestparrot.Ptr("Warszawa").(*string),
					ShipCountry:    gotestparrot.Ptr("Poland").(*string),
					ShipName:       gotestparrot.Ptr("Wolski Zajazd").(*string),
					ShipPostalCode: gotestparrot.Ptr("01-012").(*string),
					ShipVia:        gotestparrot.Ptr(int16(3)).(*int16),
					ShippedDate:    gotestparrot.Decode("1998-03-03T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "Federal Shipping",
					Phone:       gotestparrot.Ptr("(503) 555-9931").(*string),
					ShipperID:   int16(3),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(10998),
						ProductID: int16(24),
						Quantity:  int16(12),
						UnitPrice: float32(4.5),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(1),
							CategoryName: "Beverages",
							Description:  gotestparrot.Ptr("Soft drinks, coffees, teas, beers, and ales").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(1)).(*int16),
							Discontinued:    int32(1),
							ProductID:       int16(24),
							ProductName:     "Guaraná Fantástica",
							QuantityPerUnit: gotestparrot.Ptr("12 - 355 ml cans").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(0)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(10)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(4.5)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(20)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("Av. das Americanas 12.890").(*string),
							City:         gotestparrot.Ptr("Sao Paulo").(*string),
							CompanyName:  "Refrescos Americanas LTDA",
							ContactName:  gotestparrot.Ptr("Carlos Diaz").(*string),
							ContactTitle: gotestparrot.Ptr("Marketing Manager").(*string),
							Country:      gotestparrot.Ptr("Brazil").(*string),
							Phone:        gotestparrot.Ptr("(11) 555 4640").(*string),
							PostalCode:   gotestparrot.Ptr("5442").(*string),
							SupplierID:   int16(10),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("WOLZA").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(8)).(*int16),
					Freight:        gotestparrot.Ptr(float32(20.31)).(*float32),
					OrderDate:      gotestparrot.Decode("1998-04-03T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10998),
					RequiredDate:   gotestparrot.Decode("1998-04-17T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("ul. Filtrowa 68").(*string),
					ShipCity:       gotestparrot.Ptr("Warszawa").(*string),
					ShipCountry:    gotestparrot.Ptr("Poland").(*string),
					ShipName:       gotestparrot.Ptr("Wolski Zajazd").(*string),
					ShipPostalCode: gotestparrot.Ptr("01-012").(*string),
					ShipVia:        gotestparrot.Ptr(int16(2)).(*int16),
					ShippedDate:    gotestparrot.Decode("1998-04-17T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "United Package",
					Phone:       gotestparrot.Ptr("(503) 555-3199").(*string),
					ShipperID:   int16(2),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(10998),
						ProductID: int16(61),
						Quantity:  int16(7),
						UnitPrice: float32(28.5),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(2),
							CategoryName: "Condiments",
							Description:  gotestparrot.Ptr("Sweet and savory sauces, relishes, spreads, and seasonings").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(2)).(*int16),
							ProductID:       int16(61),
							ProductName:     "Sirop d'érable",
							QuantityPerUnit: gotestparrot.Ptr("24 - 500 ml bottles").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(25)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(29)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(28.5)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(113)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("148 rue Chasseur").(*string),
							City:         gotestparrot.Ptr("Ste-Hyacinthe").(*string),
							CompanyName:  "Forêts d'érables",
							ContactName:  gotestparrot.Ptr("Chantal Goulet").(*string),
							ContactTitle: gotestparrot.Ptr("Accounting Manager").(*string),
							Country:      gotestparrot.Ptr("Canada").(*string),
							Fax:          gotestparrot.Ptr("(514) 555-2921").(*string),
							Phone:        gotestparrot.Ptr("(514) 555-2955").(*string),
							PostalCode:   gotestparrot.Ptr("J2S 7S8").(*string),
							Region:       gotestparrot.Ptr("Québec").(*string),
							SupplierID:   int16(29),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("WOLZA").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(8)).(*int16),
					Freight:        gotestparrot.Ptr(float32(20.31)).(*float32),
					OrderDate:      gotestparrot.Decode("1998-04-03T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10998),
					RequiredDate:   gotestparrot.Decode("1998-04-17T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("ul. Filtrowa 68").(*string),
					ShipCity:       gotestparrot.Ptr("Warszawa").(*string),
					ShipCountry:    gotestparrot.Ptr("Poland").(*string),
					ShipName:       gotestparrot.Ptr("Wolski Zajazd").(*string),
					ShipPostalCode: gotestparrot.Ptr("01-012").(*string),
					ShipVia:        gotestparrot.Ptr(int16(2)).(*int16),
					ShippedDate:    gotestparrot.Decode("1998-04-17T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "United Package",
					Phone:       gotestparrot.Ptr("(503) 555-3199").(*string),
					ShipperID:   int16(2),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(10998),
						ProductID: int16(74),
						Quantity:  int16(20),
						UnitPrice: float32(10),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(7),
							CategoryName: "Produce",
							Description:  gotestparrot.Ptr("Dried fruit and bean curd").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(7)).(*int16),
							ProductID:       int16(74),
							ProductName:     "Longlife Tofu",
							QuantityPerUnit: gotestparrot.Ptr("5 kg pkg.").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(5)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(4)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(10)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(4)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(20)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("9-8 Sekimai Musashino-shi").(*string),
							City:         gotestparrot.Ptr("Tokyo").(*string),
							CompanyName:  "Tokyo Traders",
							ContactName:  gotestparrot.Ptr("Yoshi Nagase").(*string),
							ContactTitle: gotestparrot.Ptr("Marketing Manager").(*string),
							Country:      gotestparrot.Ptr("Japan").(*string),
							Phone:        gotestparrot.Ptr("(03) 3555-5011").(*string),
							PostalCode:   gotestparrot.Ptr("100").(*string),
							SupplierID:   int16(4),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("WOLZA").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(8)).(*int16),
					Freight:        gotestparrot.Ptr(float32(20.31)).(*float32),
					OrderDate:      gotestparrot.Decode("1998-04-03T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10998),
					RequiredDate:   gotestparrot.Decode("1998-04-17T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("ul. Filtrowa 68").(*string),
					ShipCity:       gotestparrot.Ptr("Warszawa").(*string),
					ShipCountry:    gotestparrot.Ptr("Poland").(*string),
					ShipName:       gotestparrot.Ptr("Wolski Zajazd").(*string),
					ShipPostalCode: gotestparrot.Ptr("01-012").(*string),
					ShipVia:        gotestparrot.Ptr(int16(2)).(*int16),
					ShippedDate:    gotestparrot.Decode("1998-04-17T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "United Package",
					Phone:       gotestparrot.Ptr("(503) 555-3199").(*string),
					ShipperID:   int16(2),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(10998),
						ProductID: int16(75),
						Quantity:  int16(30),
						UnitPrice: float32(7.75),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(1),
							CategoryName: "Beverages",
							Description:  gotestparrot.Ptr("Soft drinks, coffees, teas, beers, and ales").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(1)).(*int16),
							ProductID:       int16(75),
							ProductName:     "Rhönbräu Klosterbier",
							QuantityPerUnit: gotestparrot.Ptr("24 - 0.5 l bottles").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(25)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(12)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(7.75)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(125)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("Bogenallee 51").(*string),
							City:         gotestparrot.Ptr("Frankfurt").(*string),
							CompanyName:  "Plutzer Lebensmittelgroßmärkte AG",
							ContactName:  gotestparrot.Ptr("Martin Bein").(*string),
							ContactTitle: gotestparrot.Ptr("International Marketing Mgr.").(*string),
							Country:      gotestparrot.Ptr("Germany").(*string),
							Homepage:     gotestparrot.Ptr("Plutzer (on the World Wide Web)#http://www.microsoft.com/accessdev/sampleapps/plutzer.htm#").(*string),
							Phone:        gotestparrot.Ptr("(069) 992755").(*string),
							PostalCode:   gotestparrot.Ptr("60439").(*string),
							SupplierID:   int16(12),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("WOLZA").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(8)).(*int16),
					Freight:        gotestparrot.Ptr(float32(20.31)).(*float32),
					OrderDate:      gotestparrot.Decode("1998-04-03T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(10998),
					RequiredDate:   gotestparrot.Decode("1998-04-17T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("ul. Filtrowa 68").(*string),
					ShipCity:       gotestparrot.Ptr("Warszawa").(*string),
					ShipCountry:    gotestparrot.Ptr("Poland").(*string),
					ShipName:       gotestparrot.Ptr("Wolski Zajazd").(*string),
					ShipPostalCode: gotestparrot.Ptr("01-012").(*string),
					ShipVia:        gotestparrot.Ptr(int16(2)).(*int16),
					ShippedDate:    gotestparrot.Decode("1998-04-17T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "United Package",
					Phone:       gotestparrot.Ptr("(503) 555-3199").(*string),
					ShipperID:   int16(2),
				},
			}, {
				Details: struct {
					model.OrderDetails
					Products []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}
				}{
					OrderDetails: model.OrderDetails{
						OrderID:   int16(11044),
						ProductID: int16(62),
						Quantity:  int16(12),
						UnitPrice: float32(49.3),
					},
					Products: []struct {
						model.Products
						Category model.Categories
						Supplier model.Suppliers
					}{{
						Category: model.Categories{
							CategoryID:   int16(3),
							CategoryName: "Confections",
							Description:  gotestparrot.Ptr("Desserts, candies, and sweet breads").(*string),
							Picture:      gotestparrot.Ptr([]uint8{}).(*[]uint8),
						},
						Products: model.Products{
							CategoryID:      gotestparrot.Ptr(int16(3)).(*int16),
							ProductID:       int16(62),
							ProductName:     "Tarte au sucre",
							QuantityPerUnit: gotestparrot.Ptr("48 pies").(*string),
							ReorderLevel:    gotestparrot.Ptr(int16(0)).(*int16),
							SupplierID:      gotestparrot.Ptr(int16(29)).(*int16),
							UnitPrice:       gotestparrot.Ptr(float32(49.3)).(*float32),
							UnitsInStock:    gotestparrot.Ptr(int16(17)).(*int16),
							UnitsOnOrder:    gotestparrot.Ptr(int16(0)).(*int16),
						},
						Supplier: model.Suppliers{
							Address:      gotestparrot.Ptr("148 rue Chasseur").(*string),
							City:         gotestparrot.Ptr("Ste-Hyacinthe").(*string),
							CompanyName:  "Forêts d'érables",
							ContactName:  gotestparrot.Ptr("Chantal Goulet").(*string),
							ContactTitle: gotestparrot.Ptr("Accounting Manager").(*string),
							Country:      gotestparrot.Ptr("Canada").(*string),
							Fax:          gotestparrot.Ptr("(514) 555-2921").(*string),
							Phone:        gotestparrot.Ptr("(514) 555-2955").(*string),
							PostalCode:   gotestparrot.Ptr("J2S 7S8").(*string),
							Region:       gotestparrot.Ptr("Québec").(*string),
							SupplierID:   int16(29),
						},
					}},
				},
				Orders: model.Orders{
					CustomerID:     gotestparrot.Ptr("WOLZA").(*string),
					EmployeeID:     gotestparrot.Ptr(int16(4)).(*int16),
					Freight:        gotestparrot.Ptr(float32(8.72)).(*float32),
					OrderDate:      gotestparrot.Decode("1998-04-23T00:00:00Z", &time.Time{}).(*time.Time),
					OrderID:        int16(11044),
					RequiredDate:   gotestparrot.Decode("1998-05-21T00:00:00Z", &time.Time{}).(*time.Time),
					ShipAddress:    gotestparrot.Ptr("ul. Filtrowa 68").(*string),
					ShipCity:       gotestparrot.Ptr("Warszawa").(*string),
					ShipCountry:    gotestparrot.Ptr("Poland").(*string),
					ShipName:       gotestparrot.Ptr("Wolski Zajazd").(*string),
					ShipPostalCode: gotestparrot.Ptr("01-012").(*string),
					ShipVia:        gotestparrot.Ptr(int16(1)).(*int16),
					ShippedDate:    gotestparrot.Decode("1998-05-01T00:00:00Z", &time.Time{}).(*time.Time),
				},
				Shipper: model.Shippers{
					CompanyName: "Speedy Express",
					Phone:       gotestparrot.Ptr("(503) 555-9831").(*string),
					ShipperID:   int16(1),
				},
			}},
		},
	}})
}
