// Code generated by testparrot. DO NOT EDIT.

package postgres

import (
	model "github.com/go-jet/jet/v2/tests/postgres/gen/test_sample/model"
	uuid "github.com/google/uuid"
	gotestparrot "github.com/xtruder/go-testparrot"
)

func init() {
	gotestparrot.R.Load("TestEnumType", []gotestparrot.Recording{{
		Key: 0,
		Value: `
SELECT person.person_id AS "person.person_id",
     person.first_name AS "person.first_name",
     person.last_name AS "person.last_name",
     person."Mood" AS "person.Mood"
FROM test_sample.person;
`,
	}, {
		Key: 1,
		Value: []model.Person{{
			FirstName: gotestparrot.Ptr("Sad").(*string),
			LastName:  gotestparrot.Ptr("John").(*string),
			Mood:      gotestparrot.Ptr(model.Mood("sad")).(*model.Mood),
			PersonID:  gotestparrot.Decode("b68dbff4-a87d-11e9-a7f2-98ded00c39c6", uuid.UUID{}).(uuid.UUID),
		}, {
			FirstName: gotestparrot.Ptr("Ok").(*string),
			LastName:  gotestparrot.Ptr("John").(*string),
			Mood:      gotestparrot.Ptr(model.Mood("ok")).(*model.Mood),
			PersonID:  gotestparrot.Decode("b68dbff5-a87d-11e9-a7f2-98ded00c39c7", uuid.UUID{}).(uuid.UUID),
		}, {
			FirstName: gotestparrot.Ptr("Ok").(*string),
			LastName:  gotestparrot.Ptr("John").(*string),
			Mood:      gotestparrot.Ptr(model.Mood("ok")).(*model.Mood),
			PersonID:  gotestparrot.Decode("b68dbff6-a87d-11e9-a7f2-98ded00c39c8", uuid.UUID{}).(uuid.UUID),
		}},
	}})
	gotestparrot.R.Load("TestReservedWordEscape", []gotestparrot.Recording{{
		Key: 0,
		Value: `
SELECT "User"."column" AS "User.column",
     "User"."check" AS "User.check",
     "User".ceil AS "User.ceil",
     "User".commit AS "User.commit",
     "User"."create" AS "User.create",
     "User"."default" AS "User.default",
     "User"."desc" AS "User.desc",
     "User".empty AS "User.empty",
     "User".float AS "User.float",
     "User".join AS "User.join",
     "User".like AS "User.like",
     "User".max AS "User.max",
     "User".rank AS "User.rank"
FROM test_sample."User";
`,
	}, {
		Key: 1,
		Value: []model.User{{
			Ceil:    "CEIL",
			Check:   "CHECK",
			Column:  "Column",
			Commit:  "COMMIT",
			Create:  "CREATE",
			Default: "DEFAULT",
			Desc:    "DESC",
			Empty:   "EMPTY",
			Float:   "FLOAT",
			Join:    "JOIN",
			Like:    "LIKE",
			Max:     "MAX",
			Rank:    "RANK",
		}},
	}})
	gotestparrot.R.Load("TestUUIDComplex/single_struct", []gotestparrot.Recording{{
		Key: 0,
		Value: `
SELECT person.person_id AS "person.person_id",
     person.first_name AS "person.first_name",
     person.last_name AS "person.last_name",
     person."Mood" AS "person.Mood",
     person_phone.phone_id AS "person_phone.phone_id",
     person_phone.phone_number AS "person_phone.phone_number",
     person_phone.person_id AS "person_phone.person_id"
FROM test_sample.person
     INNER JOIN test_sample.person_phone ON (person_phone.person_id = person.person_id)
WHERE person.person_id = 'b68dbff6-a87d-11e9-a7f2-98ded00c39c8'
ORDER BY person.person_id ASC, person_phone.phone_id ASC;
`,
	}, {
		Key: 1,
		Value: struct {
			model.Person
			Phones []struct {
				model.PersonPhone
			}
		}{
			Person: model.Person{
				FirstName: gotestparrot.Ptr("Ok").(*string),
				LastName:  gotestparrot.Ptr("John").(*string),
				Mood:      gotestparrot.Ptr(model.Mood("ok")).(*model.Mood),
				PersonID:  gotestparrot.Decode("b68dbff6-a87d-11e9-a7f2-98ded00c39c8", uuid.UUID{}).(uuid.UUID),
			},
			Phones: []struct {
				model.PersonPhone
			}{{PersonPhone: model.PersonPhone{
				PersonID:    gotestparrot.Decode("b68dbff6-a87d-11e9-a7f2-98ded00c39c8", uuid.UUID{}).(uuid.UUID),
				PhoneID:     gotestparrot.Decode("02b61cc4-d500-4847-bd36-111eccbc7a52", uuid.UUID{}).(uuid.UUID),
				PhoneNumber: gotestparrot.Ptr("212-555-1212").(*string),
			}}, {PersonPhone: model.PersonPhone{
				PersonID:    gotestparrot.Decode("b68dbff6-a87d-11e9-a7f2-98ded00c39c8", uuid.UUID{}).(uuid.UUID),
				PhoneID:     gotestparrot.Decode("02b61cc4-d500-4847-bd36-111eccbc7a53", uuid.UUID{}).(uuid.UUID),
				PhoneNumber: gotestparrot.Ptr("212-555-1213").(*string),
			}}},
		},
	}})
	gotestparrot.R.Load("TestUUIDComplex/slice_of_structs", []gotestparrot.Recording{{
		Key: 0,
		Value: []struct {
			model.Person
			Phones []struct {
				model.PersonPhone
			}
		}{{
			Person: model.Person{
				FirstName: gotestparrot.Ptr("Sad").(*string),
				LastName:  gotestparrot.Ptr("John").(*string),
				Mood:      gotestparrot.Ptr(model.Mood("sad")).(*model.Mood),
				PersonID:  gotestparrot.Decode("b68dbff4-a87d-11e9-a7f2-98ded00c39c6", uuid.UUID{}).(uuid.UUID),
			},
			Phones: []struct {
				model.PersonPhone
			}{{PersonPhone: model.PersonPhone{
				PersonID:    gotestparrot.Decode("b68dbff4-a87d-11e9-a7f2-98ded00c39c6", uuid.UUID{}).(uuid.UUID),
				PhoneID:     gotestparrot.Decode("02b61cc4-d500-4847-bd36-111eccbc7a51", uuid.UUID{}).(uuid.UUID),
				PhoneNumber: gotestparrot.Ptr("212-555-1211").(*string),
			}}},
		}, {
			Person: model.Person{
				FirstName: gotestparrot.Ptr("Ok").(*string),
				LastName:  gotestparrot.Ptr("John").(*string),
				Mood:      gotestparrot.Ptr(model.Mood("ok")).(*model.Mood),
				PersonID:  gotestparrot.Decode("b68dbff6-a87d-11e9-a7f2-98ded00c39c8", uuid.UUID{}).(uuid.UUID),
			},
			Phones: []struct {
				model.PersonPhone
			}{{PersonPhone: model.PersonPhone{
				PersonID:    gotestparrot.Decode("b68dbff6-a87d-11e9-a7f2-98ded00c39c8", uuid.UUID{}).(uuid.UUID),
				PhoneID:     gotestparrot.Decode("02b61cc4-d500-4847-bd36-111eccbc7a52", uuid.UUID{}).(uuid.UUID),
				PhoneNumber: gotestparrot.Ptr("212-555-1212").(*string),
			}}, {PersonPhone: model.PersonPhone{
				PersonID:    gotestparrot.Decode("b68dbff6-a87d-11e9-a7f2-98ded00c39c8", uuid.UUID{}).(uuid.UUID),
				PhoneID:     gotestparrot.Decode("02b61cc4-d500-4847-bd36-111eccbc7a53", uuid.UUID{}).(uuid.UUID),
				PhoneNumber: gotestparrot.Ptr("212-555-1213").(*string),
			}}},
		}},
	}})
	gotestparrot.R.Load("TestUUIDComplex/slice_of_structs_left_join", []gotestparrot.Recording{{
		Key: 0,
		Value: []struct {
			model.Person
			Phones []struct {
				model.PersonPhone
			}
		}{{
			Person: model.Person{
				FirstName: gotestparrot.Ptr("Sad").(*string),
				LastName:  gotestparrot.Ptr("John").(*string),
				Mood:      gotestparrot.Ptr(model.Mood("sad")).(*model.Mood),
				PersonID:  gotestparrot.Decode("b68dbff4-a87d-11e9-a7f2-98ded00c39c6", uuid.UUID{}).(uuid.UUID),
			},
			Phones: []struct {
				model.PersonPhone
			}{{PersonPhone: model.PersonPhone{
				PersonID:    gotestparrot.Decode("b68dbff4-a87d-11e9-a7f2-98ded00c39c6", uuid.UUID{}).(uuid.UUID),
				PhoneID:     gotestparrot.Decode("02b61cc4-d500-4847-bd36-111eccbc7a51", uuid.UUID{}).(uuid.UUID),
				PhoneNumber: gotestparrot.Ptr("212-555-1211").(*string),
			}}},
		}, {Person: model.Person{
			FirstName: gotestparrot.Ptr("Ok").(*string),
			LastName:  gotestparrot.Ptr("John").(*string),
			Mood:      gotestparrot.Ptr(model.Mood("ok")).(*model.Mood),
			PersonID:  gotestparrot.Decode("b68dbff5-a87d-11e9-a7f2-98ded00c39c7", uuid.UUID{}).(uuid.UUID),
		}}, {
			Person: model.Person{
				FirstName: gotestparrot.Ptr("Ok").(*string),
				LastName:  gotestparrot.Ptr("John").(*string),
				Mood:      gotestparrot.Ptr(model.Mood("ok")).(*model.Mood),
				PersonID:  gotestparrot.Decode("b68dbff6-a87d-11e9-a7f2-98ded00c39c8", uuid.UUID{}).(uuid.UUID),
			},
			Phones: []struct {
				model.PersonPhone
			}{{PersonPhone: model.PersonPhone{
				PersonID:    gotestparrot.Decode("b68dbff6-a87d-11e9-a7f2-98ded00c39c8", uuid.UUID{}).(uuid.UUID),
				PhoneID:     gotestparrot.Decode("02b61cc4-d500-4847-bd36-111eccbc7a52", uuid.UUID{}).(uuid.UUID),
				PhoneNumber: gotestparrot.Ptr("212-555-1212").(*string),
			}}, {PersonPhone: model.PersonPhone{
				PersonID:    gotestparrot.Decode("b68dbff6-a87d-11e9-a7f2-98ded00c39c8", uuid.UUID{}).(uuid.UUID),
				PhoneID:     gotestparrot.Decode("02b61cc4-d500-4847-bd36-111eccbc7a53", uuid.UUID{}).(uuid.UUID),
				PhoneNumber: gotestparrot.Ptr("212-555-1213").(*string),
			}}},
		}},
	}})
	gotestparrot.R.Load("TestUUIDType", []gotestparrot.Recording{{
		Key: 0,
		Value: `
SELECT all_types.uuid AS "all_types.uuid",
     all_types.uuid_ptr AS "all_types.uuid_ptr"
FROM test_sample.all_types
WHERE all_types.uuid = 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11';
`,
	}})
	gotestparrot.R.Load("TestWierdNamesTable", []gotestparrot.Recording{{
		Key: 0,
		Value: `
SELECT "WEIRD NAMES TABLE".weird_column_name1 AS "WEIRD NAMES TABLE.weird_column_name1",
     "WEIRD NAMES TABLE"."Weird_Column_Name2" AS "WEIRD NAMES TABLE.Weird_Column_Name2",
     "WEIRD NAMES TABLE"."wEiRd_cOluMn_nAmE3" AS "WEIRD NAMES TABLE.wEiRd_cOluMn_nAmE3",
     "WEIRD NAMES TABLE"."WeIrd_CoLuMN_Name4" AS "WEIRD NAMES TABLE.WeIrd_CoLuMN_Name4",
     "WEIRD NAMES TABLE"."WEIRD_COLUMN_NAME5" AS "WEIRD NAMES TABLE.WEIRD_COLUMN_NAME5",
     "WEIRD NAMES TABLE"."WeirdColumnName6" AS "WEIRD NAMES TABLE.WeirdColumnName6",
     "WEIRD NAMES TABLE"."weirdColumnName7" AS "WEIRD NAMES TABLE.weirdColumnName7",
     "WEIRD NAMES TABLE".weirdcolumnname8 AS "WEIRD NAMES TABLE.weirdcolumnname8",
     "WEIRD NAMES TABLE"."weird col name9" AS "WEIRD NAMES TABLE.weird col name9",
     "WEIRD NAMES TABLE"."wEiRd cOlu nAmE10" AS "WEIRD NAMES TABLE.wEiRd cOlu nAmE10",
     "WEIRD NAMES TABLE"."WEIRD COLU NAME11" AS "WEIRD NAMES TABLE.WEIRD COLU NAME11",
     "WEIRD NAMES TABLE"."Weird Colu Name12" AS "WEIRD NAMES TABLE.Weird Colu Name12",
     "WEIRD NAMES TABLE"."weird-col-name13" AS "WEIRD NAMES TABLE.weird-col-name13",
     "WEIRD NAMES TABLE"."wEiRd-cOlu-nAmE14" AS "WEIRD NAMES TABLE.wEiRd-cOlu-nAmE14",
     "WEIRD NAMES TABLE"."WEIRD-COLU-NAME15" AS "WEIRD NAMES TABLE.WEIRD-COLU-NAME15",
     "WEIRD NAMES TABLE"."Weird-Colu-Name16" AS "WEIRD NAMES TABLE.Weird-Colu-Name16"
FROM test_sample."WEIRD NAMES TABLE";
`,
	}, {
		Key: 1,
		Value: []model.WeirdNamesTable{{
			WeirdColName13:   "Doe",
			WeirdColName9:    "Doe",
			WeirdColuName10:  "Doe",
			WeirdColuName11:  "Doe",
			WeirdColuName12:  "Doe",
			WeirdColuName14:  "Doe",
			WeirdColuName15:  "Doe",
			WeirdColuName16:  "Doe",
			WeirdColumnName1: "Doe",
			WeirdColumnName2: "Doe",
			WeirdColumnName3: "Doe",
			WeirdColumnName4: "Doe",
			WeirdColumnName5: "Doe",
			WeirdColumnName6: "Doe",
			WeirdColumnName7: "Doe",
			Weirdcolumnname8: gotestparrot.Ptr("Doe").(*string),
		}},
	}})
}
