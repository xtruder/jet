// Code generated by testparrot. DO NOT EDIT.

package mariadb

import gotestparrot "github.com/xtruder/go-testparrot"

func init() {
	gotestparrot.R.Load("TestGenerator", []gotestparrot.Recording{{
		Key: "/enum/film_list_rating.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package enum

import "github.com/go-jet/jet/v2/mysql"

var FilmListRating = &struct {
	G    mysql.StringExpression
	Pg   mysql.StringExpression
	Pg13 mysql.StringExpression
	R    mysql.StringExpression
	Nc17 mysql.StringExpression
}{
	G:    mysql.NewEnumValue("G"),
	Pg:   mysql.NewEnumValue("PG"),
	Pg13: mysql.NewEnumValue("PG-13"),
	R:    mysql.NewEnumValue("R"),
	Nc17: mysql.NewEnumValue("NC-17"),
}
`,
	}, {
		Key: "/enum/film_rating.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package enum

import "github.com/go-jet/jet/v2/mysql"

var FilmRating = &struct {
	G    mysql.StringExpression
	Pg   mysql.StringExpression
	Pg13 mysql.StringExpression
	R    mysql.StringExpression
	Nc17 mysql.StringExpression
}{
	G:    mysql.NewEnumValue("G"),
	Pg:   mysql.NewEnumValue("PG"),
	Pg13: mysql.NewEnumValue("PG-13"),
	R:    mysql.NewEnumValue("R"),
	Nc17: mysql.NewEnumValue("NC-17"),
}
`,
	}, {
		Key: "/enum/nicer_but_slower_film_list_rating.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package enum

import "github.com/go-jet/jet/v2/mysql"

var NicerButSlowerFilmListRating = &struct {
	G    mysql.StringExpression
	Pg   mysql.StringExpression
	Pg13 mysql.StringExpression
	R    mysql.StringExpression
	Nc17 mysql.StringExpression
}{
	G:    mysql.NewEnumValue("G"),
	Pg:   mysql.NewEnumValue("PG"),
	Pg13: mysql.NewEnumValue("PG-13"),
	R:    mysql.NewEnumValue("R"),
	Nc17: mysql.NewEnumValue("NC-17"),
}
`,
	}, {
		Key: "/model/actor.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import (
	"time"
)

type Actor struct {
	ActorID    uint16 ` + "`" + `sql:"primary_key"` + "`" + `
	FirstName  string
	LastName   string
	LastUpdate time.Time
}
`,
	}, {
		Key: "/model/actor_info.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

type ActorInfo struct {
	ActorID   uint16
	FirstName string
	LastName  string
	FilmInfo  *string
}
`,
	}, {
		Key: "/model/address.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import (
	"time"
)

type Address struct {
	AddressID  uint16 ` + "`" + `sql:"primary_key"` + "`" + `
	Address    string
	Address2   *string
	District   string
	CityID     uint16
	PostalCode *string
	Phone      string
	LastUpdate time.Time
}
`,
	}, {
		Key: "/model/category.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import (
	"time"
)

type Category struct {
	CategoryID uint8 ` + "`" + `sql:"primary_key"` + "`" + `
	Name       string
	LastUpdate time.Time
}
`,
	}, {
		Key: "/model/city.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import (
	"time"
)

type City struct {
	CityID     uint16 ` + "`" + `sql:"primary_key"` + "`" + `
	City       string
	CountryID  uint16
	LastUpdate time.Time
}
`,
	}, {
		Key: "/model/country.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import (
	"time"
)

type Country struct {
	CountryID  uint16 ` + "`" + `sql:"primary_key"` + "`" + `
	Country    string
	LastUpdate time.Time
}
`,
	}, {
		Key: "/model/customer.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import (
	"time"
)

type Customer struct {
	CustomerID uint16 ` + "`" + `sql:"primary_key"` + "`" + `
	StoreID    uint8
	FirstName  string
	LastName   string
	Email      *string
	AddressID  uint16
	Active     bool
	CreateDate time.Time
	LastUpdate time.Time
}
`,
	}, {
		Key: "/model/customer_list.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

type CustomerList struct {
	ID      uint16
	Name    *string
	Address string
	ZipCode *string
	Phone   string
	City    string
	Country string
	Notes   string
	Sid     uint8
}
`,
	}, {
		Key: "/model/film.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import (
	"time"
)

type Film struct {
	FilmID             uint16 ` + "`" + `sql:"primary_key"` + "`" + `
	Title              string
	Description        *string
	ReleaseYear        *int16
	LanguageID         uint8
	OriginalLanguageID *uint8
	RentalDuration     uint8
	RentalRate         float64
	Length             *uint16
	ReplacementCost    float64
	Rating             *FilmRating
	SpecialFeatures    *string
	LastUpdate         time.Time
}
`,
	}, {
		Key: "/model/film_actor.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import (
	"time"
)

type FilmActor struct {
	ActorID    uint16 ` + "`" + `sql:"primary_key"` + "`" + `
	FilmID     uint16 ` + "`" + `sql:"primary_key"` + "`" + `
	LastUpdate time.Time
}
`,
	}, {
		Key: "/model/film_category.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import (
	"time"
)

type FilmCategory struct {
	FilmID     uint16 ` + "`" + `sql:"primary_key"` + "`" + `
	CategoryID uint8  ` + "`" + `sql:"primary_key"` + "`" + `
	LastUpdate time.Time
}
`,
	}, {
		Key: "/model/film_list.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

type FilmList struct {
	Fid         *uint16
	Title       *string
	Description *string
	Category    string
	Price       *float64
	Length      *uint16
	Rating      *FilmListRating
	Actors      *string
}
`,
	}, {
		Key: "/model/film_list_rating.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type FilmListRating string

const (
	FilmListRating_G    FilmListRating = "G"
	FilmListRating_Pg   FilmListRating = "PG"
	FilmListRating_Pg13 FilmListRating = "PG-13"
	FilmListRating_R    FilmListRating = "R"
	FilmListRating_Nc17 FilmListRating = "NC-17"
)

func (e *FilmListRating) Scan(value interface{}) error {
	if v, ok := value.(string); !ok {
		return errors.New("jet: Invalid data for FilmListRating enum")
	} else {
		switch string(v) {
		case "G":
			*e = FilmListRating_G
		case "PG":
			*e = FilmListRating_Pg
		case "PG-13":
			*e = FilmListRating_Pg13
		case "R":
			*e = FilmListRating_R
		case "NC-17":
			*e = FilmListRating_Nc17
		default:
			return errors.New("jet: Inavlid data " + string(v) + "for FilmListRating enum")
		}

		return nil
	}
}

func (e FilmListRating) String() string {
	return string(e)
}
`,
	}, {
		Key: "/model/film_rating.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type FilmRating string

const (
	FilmRating_G    FilmRating = "G"
	FilmRating_Pg   FilmRating = "PG"
	FilmRating_Pg13 FilmRating = "PG-13"
	FilmRating_R    FilmRating = "R"
	FilmRating_Nc17 FilmRating = "NC-17"
)

func (e *FilmRating) Scan(value interface{}) error {
	if v, ok := value.(string); !ok {
		return errors.New("jet: Invalid data for FilmRating enum")
	} else {
		switch string(v) {
		case "G":
			*e = FilmRating_G
		case "PG":
			*e = FilmRating_Pg
		case "PG-13":
			*e = FilmRating_Pg13
		case "R":
			*e = FilmRating_R
		case "NC-17":
			*e = FilmRating_Nc17
		default:
			return errors.New("jet: Inavlid data " + string(v) + "for FilmRating enum")
		}

		return nil
	}
}

func (e FilmRating) String() string {
	return string(e)
}
`,
	}, {
		Key: "/model/film_text.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

type FilmText struct {
	FilmID      int16 ` + "`" + `sql:"primary_key"` + "`" + `
	Title       string
	Description *string
}
`,
	}, {
		Key: "/model/inventory.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import (
	"time"
)

type Inventory struct {
	InventoryID uint32 ` + "`" + `sql:"primary_key"` + "`" + `
	FilmID      uint16
	StoreID     uint8
	LastUpdate  time.Time
}
`,
	}, {
		Key: "/model/language.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import (
	"time"
)

type Language struct {
	LanguageID uint8 ` + "`" + `sql:"primary_key"` + "`" + `
	Name       string
	LastUpdate time.Time
}
`,
	}, {
		Key: "/model/nicer_but_slower_film_list.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

type NicerButSlowerFilmList struct {
	Fid         *uint16
	Title       *string
	Description *string
	Category    string
	Price       *float64
	Length      *uint16
	Rating      *NicerButSlowerFilmListRating
	Actors      *string
}
`,
	}, {
		Key: "/model/nicer_but_slower_film_list_rating.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type NicerButSlowerFilmListRating string

const (
	NicerButSlowerFilmListRating_G    NicerButSlowerFilmListRating = "G"
	NicerButSlowerFilmListRating_Pg   NicerButSlowerFilmListRating = "PG"
	NicerButSlowerFilmListRating_Pg13 NicerButSlowerFilmListRating = "PG-13"
	NicerButSlowerFilmListRating_R    NicerButSlowerFilmListRating = "R"
	NicerButSlowerFilmListRating_Nc17 NicerButSlowerFilmListRating = "NC-17"
)

func (e *NicerButSlowerFilmListRating) Scan(value interface{}) error {
	if v, ok := value.(string); !ok {
		return errors.New("jet: Invalid data for NicerButSlowerFilmListRating enum")
	} else {
		switch string(v) {
		case "G":
			*e = NicerButSlowerFilmListRating_G
		case "PG":
			*e = NicerButSlowerFilmListRating_Pg
		case "PG-13":
			*e = NicerButSlowerFilmListRating_Pg13
		case "R":
			*e = NicerButSlowerFilmListRating_R
		case "NC-17":
			*e = NicerButSlowerFilmListRating_Nc17
		default:
			return errors.New("jet: Inavlid data " + string(v) + "for NicerButSlowerFilmListRating enum")
		}

		return nil
	}
}

func (e NicerButSlowerFilmListRating) String() string {
	return string(e)
}
`,
	}, {
		Key: "/model/payment.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import (
	"time"
)

type Payment struct {
	PaymentID   uint16 ` + "`" + `sql:"primary_key"` + "`" + `
	CustomerID  uint16
	StaffID     uint8
	RentalID    *int32
	Amount      float64
	PaymentDate time.Time
	LastUpdate  time.Time
}
`,
	}, {
		Key: "/model/rental.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import (
	"time"
)

type Rental struct {
	RentalID    int32 ` + "`" + `sql:"primary_key"` + "`" + `
	RentalDate  time.Time
	InventoryID uint32
	CustomerID  uint16
	ReturnDate  *time.Time
	StaffID     uint8
	LastUpdate  time.Time
}
`,
	}, {
		Key: "/model/sales_by_film_category.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

type SalesByFilmCategory struct {
	Category   string
	TotalSales *float64
}
`,
	}, {
		Key: "/model/sales_by_store.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

type SalesByStore struct {
	Store      *string
	Manager    *string
	TotalSales *float64
}
`,
	}, {
		Key: "/model/staff.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import (
	"time"
)

type Staff struct {
	StaffID    uint8 ` + "`" + `sql:"primary_key"` + "`" + `
	FirstName  string
	LastName   string
	AddressID  uint16
	Picture    *[]byte
	Email      *string
	StoreID    uint8
	Active     bool
	Username   string
	Password   *string
	LastUpdate time.Time
}
`,
	}, {
		Key: "/model/staff_list.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

type StaffList struct {
	ID      uint8
	Name    *string
	Address string
	ZipCode *string
	Phone   string
	City    string
	Country string
	Sid     uint8
}
`,
	}, {
		Key: "/model/store.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import (
	"time"
)

type Store struct {
	StoreID        uint8 ` + "`" + `sql:"primary_key"` + "`" + `
	ManagerStaffID uint8
	AddressID      uint16
	LastUpdate     time.Time
}
`,
	}, {
		Key: "/table/actor.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Actor = newActorTable()

type ActorTable struct {
	mysql.Table

	//Columns
	ActorID    mysql.ColumnInteger
	FirstName  mysql.ColumnString
	LastName   mysql.ColumnString
	LastUpdate mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new ActorTable with assigned alias
func (a *ActorTable) AS(alias string) ActorTable {
	aliasTable := newActorTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newActorTable() ActorTable {
	var (
		ActorIDColumn    = mysql.IntegerColumn("actor_id")
		FirstNameColumn  = mysql.StringColumn("first_name")
		LastNameColumn   = mysql.StringColumn("last_name")
		LastUpdateColumn = mysql.TimestampColumn("last_update")
		allColumns       = mysql.ColumnList{ActorIDColumn, FirstNameColumn, LastNameColumn, LastUpdateColumn}
		mutableColumns   = mysql.ColumnList{FirstNameColumn, LastNameColumn, LastUpdateColumn}
	)

	return ActorTable{
		Table: mysql.NewTable("dvds", "actor", allColumns...),

		//Columns
		ActorID:    ActorIDColumn,
		FirstName:  FirstNameColumn,
		LastName:   LastNameColumn,
		LastUpdate: LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/table/address.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Address = newAddressTable()

type AddressTable struct {
	mysql.Table

	//Columns
	AddressID  mysql.ColumnInteger
	Address    mysql.ColumnString
	Address2   mysql.ColumnString
	District   mysql.ColumnString
	CityID     mysql.ColumnInteger
	PostalCode mysql.ColumnString
	Phone      mysql.ColumnString
	LastUpdate mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new AddressTable with assigned alias
func (a *AddressTable) AS(alias string) AddressTable {
	aliasTable := newAddressTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newAddressTable() AddressTable {
	var (
		AddressIDColumn  = mysql.IntegerColumn("address_id")
		AddressColumn    = mysql.StringColumn("address")
		Address2Column   = mysql.StringColumn("address2")
		DistrictColumn   = mysql.StringColumn("district")
		CityIDColumn     = mysql.IntegerColumn("city_id")
		PostalCodeColumn = mysql.StringColumn("postal_code")
		PhoneColumn      = mysql.StringColumn("phone")
		LastUpdateColumn = mysql.TimestampColumn("last_update")
		allColumns       = mysql.ColumnList{AddressIDColumn, AddressColumn, Address2Column, DistrictColumn, CityIDColumn, PostalCodeColumn, PhoneColumn, LastUpdateColumn}
		mutableColumns   = mysql.ColumnList{AddressColumn, Address2Column, DistrictColumn, CityIDColumn, PostalCodeColumn, PhoneColumn, LastUpdateColumn}
	)

	return AddressTable{
		Table: mysql.NewTable("dvds", "address", allColumns...),

		//Columns
		AddressID:  AddressIDColumn,
		Address:    AddressColumn,
		Address2:   Address2Column,
		District:   DistrictColumn,
		CityID:     CityIDColumn,
		PostalCode: PostalCodeColumn,
		Phone:      PhoneColumn,
		LastUpdate: LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/table/category.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Category = newCategoryTable()

type CategoryTable struct {
	mysql.Table

	//Columns
	CategoryID mysql.ColumnInteger
	Name       mysql.ColumnString
	LastUpdate mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new CategoryTable with assigned alias
func (a *CategoryTable) AS(alias string) CategoryTable {
	aliasTable := newCategoryTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newCategoryTable() CategoryTable {
	var (
		CategoryIDColumn = mysql.IntegerColumn("category_id")
		NameColumn       = mysql.StringColumn("name")
		LastUpdateColumn = mysql.TimestampColumn("last_update")
		allColumns       = mysql.ColumnList{CategoryIDColumn, NameColumn, LastUpdateColumn}
		mutableColumns   = mysql.ColumnList{NameColumn, LastUpdateColumn}
	)

	return CategoryTable{
		Table: mysql.NewTable("dvds", "category", allColumns...),

		//Columns
		CategoryID: CategoryIDColumn,
		Name:       NameColumn,
		LastUpdate: LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/table/city.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var City = newCityTable()

type CityTable struct {
	mysql.Table

	//Columns
	CityID     mysql.ColumnInteger
	City       mysql.ColumnString
	CountryID  mysql.ColumnInteger
	LastUpdate mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new CityTable with assigned alias
func (a *CityTable) AS(alias string) CityTable {
	aliasTable := newCityTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newCityTable() CityTable {
	var (
		CityIDColumn     = mysql.IntegerColumn("city_id")
		CityColumn       = mysql.StringColumn("city")
		CountryIDColumn  = mysql.IntegerColumn("country_id")
		LastUpdateColumn = mysql.TimestampColumn("last_update")
		allColumns       = mysql.ColumnList{CityIDColumn, CityColumn, CountryIDColumn, LastUpdateColumn}
		mutableColumns   = mysql.ColumnList{CityColumn, CountryIDColumn, LastUpdateColumn}
	)

	return CityTable{
		Table: mysql.NewTable("dvds", "city", allColumns...),

		//Columns
		CityID:     CityIDColumn,
		City:       CityColumn,
		CountryID:  CountryIDColumn,
		LastUpdate: LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/table/country.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Country = newCountryTable()

type CountryTable struct {
	mysql.Table

	//Columns
	CountryID  mysql.ColumnInteger
	Country    mysql.ColumnString
	LastUpdate mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new CountryTable with assigned alias
func (a *CountryTable) AS(alias string) CountryTable {
	aliasTable := newCountryTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newCountryTable() CountryTable {
	var (
		CountryIDColumn  = mysql.IntegerColumn("country_id")
		CountryColumn    = mysql.StringColumn("country")
		LastUpdateColumn = mysql.TimestampColumn("last_update")
		allColumns       = mysql.ColumnList{CountryIDColumn, CountryColumn, LastUpdateColumn}
		mutableColumns   = mysql.ColumnList{CountryColumn, LastUpdateColumn}
	)

	return CountryTable{
		Table: mysql.NewTable("dvds", "country", allColumns...),

		//Columns
		CountryID:  CountryIDColumn,
		Country:    CountryColumn,
		LastUpdate: LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/table/customer.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Customer = newCustomerTable()

type CustomerTable struct {
	mysql.Table

	//Columns
	CustomerID mysql.ColumnInteger
	StoreID    mysql.ColumnInteger
	FirstName  mysql.ColumnString
	LastName   mysql.ColumnString
	Email      mysql.ColumnString
	AddressID  mysql.ColumnInteger
	Active     mysql.ColumnBool
	CreateDate mysql.ColumnTimestamp
	LastUpdate mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new CustomerTable with assigned alias
func (a *CustomerTable) AS(alias string) CustomerTable {
	aliasTable := newCustomerTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newCustomerTable() CustomerTable {
	var (
		CustomerIDColumn = mysql.IntegerColumn("customer_id")
		StoreIDColumn    = mysql.IntegerColumn("store_id")
		FirstNameColumn  = mysql.StringColumn("first_name")
		LastNameColumn   = mysql.StringColumn("last_name")
		EmailColumn      = mysql.StringColumn("email")
		AddressIDColumn  = mysql.IntegerColumn("address_id")
		ActiveColumn     = mysql.BoolColumn("active")
		CreateDateColumn = mysql.TimestampColumn("create_date")
		LastUpdateColumn = mysql.TimestampColumn("last_update")
		allColumns       = mysql.ColumnList{CustomerIDColumn, StoreIDColumn, FirstNameColumn, LastNameColumn, EmailColumn, AddressIDColumn, ActiveColumn, CreateDateColumn, LastUpdateColumn}
		mutableColumns   = mysql.ColumnList{StoreIDColumn, FirstNameColumn, LastNameColumn, EmailColumn, AddressIDColumn, ActiveColumn, CreateDateColumn, LastUpdateColumn}
	)

	return CustomerTable{
		Table: mysql.NewTable("dvds", "customer", allColumns...),

		//Columns
		CustomerID: CustomerIDColumn,
		StoreID:    StoreIDColumn,
		FirstName:  FirstNameColumn,
		LastName:   LastNameColumn,
		Email:      EmailColumn,
		AddressID:  AddressIDColumn,
		Active:     ActiveColumn,
		CreateDate: CreateDateColumn,
		LastUpdate: LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/table/film.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Film = newFilmTable()

type FilmTable struct {
	mysql.Table

	//Columns
	FilmID             mysql.ColumnInteger
	Title              mysql.ColumnString
	Description        mysql.ColumnString
	ReleaseYear        mysql.ColumnInteger
	LanguageID         mysql.ColumnInteger
	OriginalLanguageID mysql.ColumnInteger
	RentalDuration     mysql.ColumnInteger
	RentalRate         mysql.ColumnFloat
	Length             mysql.ColumnInteger
	ReplacementCost    mysql.ColumnFloat
	Rating             mysql.ColumnString
	SpecialFeatures    mysql.ColumnString
	LastUpdate         mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new FilmTable with assigned alias
func (a *FilmTable) AS(alias string) FilmTable {
	aliasTable := newFilmTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newFilmTable() FilmTable {
	var (
		FilmIDColumn             = mysql.IntegerColumn("film_id")
		TitleColumn              = mysql.StringColumn("title")
		DescriptionColumn        = mysql.StringColumn("description")
		ReleaseYearColumn        = mysql.IntegerColumn("release_year")
		LanguageIDColumn         = mysql.IntegerColumn("language_id")
		OriginalLanguageIDColumn = mysql.IntegerColumn("original_language_id")
		RentalDurationColumn     = mysql.IntegerColumn("rental_duration")
		RentalRateColumn         = mysql.FloatColumn("rental_rate")
		LengthColumn             = mysql.IntegerColumn("length")
		ReplacementCostColumn    = mysql.FloatColumn("replacement_cost")
		RatingColumn             = mysql.StringColumn("rating")
		SpecialFeaturesColumn    = mysql.StringColumn("special_features")
		LastUpdateColumn         = mysql.TimestampColumn("last_update")
		allColumns               = mysql.ColumnList{FilmIDColumn, TitleColumn, DescriptionColumn, ReleaseYearColumn, LanguageIDColumn, OriginalLanguageIDColumn, RentalDurationColumn, RentalRateColumn, LengthColumn, ReplacementCostColumn, RatingColumn, SpecialFeaturesColumn, LastUpdateColumn}
		mutableColumns           = mysql.ColumnList{TitleColumn, DescriptionColumn, ReleaseYearColumn, LanguageIDColumn, OriginalLanguageIDColumn, RentalDurationColumn, RentalRateColumn, LengthColumn, ReplacementCostColumn, RatingColumn, SpecialFeaturesColumn, LastUpdateColumn}
	)

	return FilmTable{
		Table: mysql.NewTable("dvds", "film", allColumns...),

		//Columns
		FilmID:             FilmIDColumn,
		Title:              TitleColumn,
		Description:        DescriptionColumn,
		ReleaseYear:        ReleaseYearColumn,
		LanguageID:         LanguageIDColumn,
		OriginalLanguageID: OriginalLanguageIDColumn,
		RentalDuration:     RentalDurationColumn,
		RentalRate:         RentalRateColumn,
		Length:             LengthColumn,
		ReplacementCost:    ReplacementCostColumn,
		Rating:             RatingColumn,
		SpecialFeatures:    SpecialFeaturesColumn,
		LastUpdate:         LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/table/film_actor.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FilmActor = newFilmActorTable()

type FilmActorTable struct {
	mysql.Table

	//Columns
	ActorID    mysql.ColumnInteger
	FilmID     mysql.ColumnInteger
	LastUpdate mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new FilmActorTable with assigned alias
func (a *FilmActorTable) AS(alias string) FilmActorTable {
	aliasTable := newFilmActorTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newFilmActorTable() FilmActorTable {
	var (
		ActorIDColumn    = mysql.IntegerColumn("actor_id")
		FilmIDColumn     = mysql.IntegerColumn("film_id")
		LastUpdateColumn = mysql.TimestampColumn("last_update")
		allColumns       = mysql.ColumnList{ActorIDColumn, FilmIDColumn, LastUpdateColumn}
		mutableColumns   = mysql.ColumnList{LastUpdateColumn}
	)

	return FilmActorTable{
		Table: mysql.NewTable("dvds", "film_actor", allColumns...),

		//Columns
		ActorID:    ActorIDColumn,
		FilmID:     FilmIDColumn,
		LastUpdate: LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/table/film_category.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FilmCategory = newFilmCategoryTable()

type FilmCategoryTable struct {
	mysql.Table

	//Columns
	FilmID     mysql.ColumnInteger
	CategoryID mysql.ColumnInteger
	LastUpdate mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new FilmCategoryTable with assigned alias
func (a *FilmCategoryTable) AS(alias string) FilmCategoryTable {
	aliasTable := newFilmCategoryTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newFilmCategoryTable() FilmCategoryTable {
	var (
		FilmIDColumn     = mysql.IntegerColumn("film_id")
		CategoryIDColumn = mysql.IntegerColumn("category_id")
		LastUpdateColumn = mysql.TimestampColumn("last_update")
		allColumns       = mysql.ColumnList{FilmIDColumn, CategoryIDColumn, LastUpdateColumn}
		mutableColumns   = mysql.ColumnList{LastUpdateColumn}
	)

	return FilmCategoryTable{
		Table: mysql.NewTable("dvds", "film_category", allColumns...),

		//Columns
		FilmID:     FilmIDColumn,
		CategoryID: CategoryIDColumn,
		LastUpdate: LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/table/film_text.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FilmText = newFilmTextTable()

type FilmTextTable struct {
	mysql.Table

	//Columns
	FilmID      mysql.ColumnInteger
	Title       mysql.ColumnString
	Description mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new FilmTextTable with assigned alias
func (a *FilmTextTable) AS(alias string) FilmTextTable {
	aliasTable := newFilmTextTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newFilmTextTable() FilmTextTable {
	var (
		FilmIDColumn      = mysql.IntegerColumn("film_id")
		TitleColumn       = mysql.StringColumn("title")
		DescriptionColumn = mysql.StringColumn("description")
		allColumns        = mysql.ColumnList{FilmIDColumn, TitleColumn, DescriptionColumn}
		mutableColumns    = mysql.ColumnList{TitleColumn, DescriptionColumn}
	)

	return FilmTextTable{
		Table: mysql.NewTable("dvds", "film_text", allColumns...),

		//Columns
		FilmID:      FilmIDColumn,
		Title:       TitleColumn,
		Description: DescriptionColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/table/inventory.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Inventory = newInventoryTable()

type InventoryTable struct {
	mysql.Table

	//Columns
	InventoryID mysql.ColumnInteger
	FilmID      mysql.ColumnInteger
	StoreID     mysql.ColumnInteger
	LastUpdate  mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new InventoryTable with assigned alias
func (a *InventoryTable) AS(alias string) InventoryTable {
	aliasTable := newInventoryTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newInventoryTable() InventoryTable {
	var (
		InventoryIDColumn = mysql.IntegerColumn("inventory_id")
		FilmIDColumn      = mysql.IntegerColumn("film_id")
		StoreIDColumn     = mysql.IntegerColumn("store_id")
		LastUpdateColumn  = mysql.TimestampColumn("last_update")
		allColumns        = mysql.ColumnList{InventoryIDColumn, FilmIDColumn, StoreIDColumn, LastUpdateColumn}
		mutableColumns    = mysql.ColumnList{FilmIDColumn, StoreIDColumn, LastUpdateColumn}
	)

	return InventoryTable{
		Table: mysql.NewTable("dvds", "inventory", allColumns...),

		//Columns
		InventoryID: InventoryIDColumn,
		FilmID:      FilmIDColumn,
		StoreID:     StoreIDColumn,
		LastUpdate:  LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/table/language.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Language = newLanguageTable()

type LanguageTable struct {
	mysql.Table

	//Columns
	LanguageID mysql.ColumnInteger
	Name       mysql.ColumnString
	LastUpdate mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new LanguageTable with assigned alias
func (a *LanguageTable) AS(alias string) LanguageTable {
	aliasTable := newLanguageTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newLanguageTable() LanguageTable {
	var (
		LanguageIDColumn = mysql.IntegerColumn("language_id")
		NameColumn       = mysql.StringColumn("name")
		LastUpdateColumn = mysql.TimestampColumn("last_update")
		allColumns       = mysql.ColumnList{LanguageIDColumn, NameColumn, LastUpdateColumn}
		mutableColumns   = mysql.ColumnList{NameColumn, LastUpdateColumn}
	)

	return LanguageTable{
		Table: mysql.NewTable("dvds", "language", allColumns...),

		//Columns
		LanguageID: LanguageIDColumn,
		Name:       NameColumn,
		LastUpdate: LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/table/payment.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Payment = newPaymentTable()

type PaymentTable struct {
	mysql.Table

	//Columns
	PaymentID   mysql.ColumnInteger
	CustomerID  mysql.ColumnInteger
	StaffID     mysql.ColumnInteger
	RentalID    mysql.ColumnInteger
	Amount      mysql.ColumnFloat
	PaymentDate mysql.ColumnTimestamp
	LastUpdate  mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new PaymentTable with assigned alias
func (a *PaymentTable) AS(alias string) PaymentTable {
	aliasTable := newPaymentTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newPaymentTable() PaymentTable {
	var (
		PaymentIDColumn   = mysql.IntegerColumn("payment_id")
		CustomerIDColumn  = mysql.IntegerColumn("customer_id")
		StaffIDColumn     = mysql.IntegerColumn("staff_id")
		RentalIDColumn    = mysql.IntegerColumn("rental_id")
		AmountColumn      = mysql.FloatColumn("amount")
		PaymentDateColumn = mysql.TimestampColumn("payment_date")
		LastUpdateColumn  = mysql.TimestampColumn("last_update")
		allColumns        = mysql.ColumnList{PaymentIDColumn, CustomerIDColumn, StaffIDColumn, RentalIDColumn, AmountColumn, PaymentDateColumn, LastUpdateColumn}
		mutableColumns    = mysql.ColumnList{CustomerIDColumn, StaffIDColumn, RentalIDColumn, AmountColumn, PaymentDateColumn, LastUpdateColumn}
	)

	return PaymentTable{
		Table: mysql.NewTable("dvds", "payment", allColumns...),

		//Columns
		PaymentID:   PaymentIDColumn,
		CustomerID:  CustomerIDColumn,
		StaffID:     StaffIDColumn,
		RentalID:    RentalIDColumn,
		Amount:      AmountColumn,
		PaymentDate: PaymentDateColumn,
		LastUpdate:  LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/table/rental.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Rental = newRentalTable()

type RentalTable struct {
	mysql.Table

	//Columns
	RentalID    mysql.ColumnInteger
	RentalDate  mysql.ColumnTimestamp
	InventoryID mysql.ColumnInteger
	CustomerID  mysql.ColumnInteger
	ReturnDate  mysql.ColumnTimestamp
	StaffID     mysql.ColumnInteger
	LastUpdate  mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new RentalTable with assigned alias
func (a *RentalTable) AS(alias string) RentalTable {
	aliasTable := newRentalTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newRentalTable() RentalTable {
	var (
		RentalIDColumn    = mysql.IntegerColumn("rental_id")
		RentalDateColumn  = mysql.TimestampColumn("rental_date")
		InventoryIDColumn = mysql.IntegerColumn("inventory_id")
		CustomerIDColumn  = mysql.IntegerColumn("customer_id")
		ReturnDateColumn  = mysql.TimestampColumn("return_date")
		StaffIDColumn     = mysql.IntegerColumn("staff_id")
		LastUpdateColumn  = mysql.TimestampColumn("last_update")
		allColumns        = mysql.ColumnList{RentalIDColumn, RentalDateColumn, InventoryIDColumn, CustomerIDColumn, ReturnDateColumn, StaffIDColumn, LastUpdateColumn}
		mutableColumns    = mysql.ColumnList{RentalDateColumn, InventoryIDColumn, CustomerIDColumn, ReturnDateColumn, StaffIDColumn, LastUpdateColumn}
	)

	return RentalTable{
		Table: mysql.NewTable("dvds", "rental", allColumns...),

		//Columns
		RentalID:    RentalIDColumn,
		RentalDate:  RentalDateColumn,
		InventoryID: InventoryIDColumn,
		CustomerID:  CustomerIDColumn,
		ReturnDate:  ReturnDateColumn,
		StaffID:     StaffIDColumn,
		LastUpdate:  LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/table/staff.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Staff = newStaffTable()

type StaffTable struct {
	mysql.Table

	//Columns
	StaffID    mysql.ColumnInteger
	FirstName  mysql.ColumnString
	LastName   mysql.ColumnString
	AddressID  mysql.ColumnInteger
	Picture    mysql.ColumnString
	Email      mysql.ColumnString
	StoreID    mysql.ColumnInteger
	Active     mysql.ColumnBool
	Username   mysql.ColumnString
	Password   mysql.ColumnString
	LastUpdate mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new StaffTable with assigned alias
func (a *StaffTable) AS(alias string) StaffTable {
	aliasTable := newStaffTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newStaffTable() StaffTable {
	var (
		StaffIDColumn    = mysql.IntegerColumn("staff_id")
		FirstNameColumn  = mysql.StringColumn("first_name")
		LastNameColumn   = mysql.StringColumn("last_name")
		AddressIDColumn  = mysql.IntegerColumn("address_id")
		PictureColumn    = mysql.StringColumn("picture")
		EmailColumn      = mysql.StringColumn("email")
		StoreIDColumn    = mysql.IntegerColumn("store_id")
		ActiveColumn     = mysql.BoolColumn("active")
		UsernameColumn   = mysql.StringColumn("username")
		PasswordColumn   = mysql.StringColumn("password")
		LastUpdateColumn = mysql.TimestampColumn("last_update")
		allColumns       = mysql.ColumnList{StaffIDColumn, FirstNameColumn, LastNameColumn, AddressIDColumn, PictureColumn, EmailColumn, StoreIDColumn, ActiveColumn, UsernameColumn, PasswordColumn, LastUpdateColumn}
		mutableColumns   = mysql.ColumnList{FirstNameColumn, LastNameColumn, AddressIDColumn, PictureColumn, EmailColumn, StoreIDColumn, ActiveColumn, UsernameColumn, PasswordColumn, LastUpdateColumn}
	)

	return StaffTable{
		Table: mysql.NewTable("dvds", "staff", allColumns...),

		//Columns
		StaffID:    StaffIDColumn,
		FirstName:  FirstNameColumn,
		LastName:   LastNameColumn,
		AddressID:  AddressIDColumn,
		Picture:    PictureColumn,
		Email:      EmailColumn,
		StoreID:    StoreIDColumn,
		Active:     ActiveColumn,
		Username:   UsernameColumn,
		Password:   PasswordColumn,
		LastUpdate: LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/table/store.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Store = newStoreTable()

type StoreTable struct {
	mysql.Table

	//Columns
	StoreID        mysql.ColumnInteger
	ManagerStaffID mysql.ColumnInteger
	AddressID      mysql.ColumnInteger
	LastUpdate     mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new StoreTable with assigned alias
func (a *StoreTable) AS(alias string) StoreTable {
	aliasTable := newStoreTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newStoreTable() StoreTable {
	var (
		StoreIDColumn        = mysql.IntegerColumn("store_id")
		ManagerStaffIDColumn = mysql.IntegerColumn("manager_staff_id")
		AddressIDColumn      = mysql.IntegerColumn("address_id")
		LastUpdateColumn     = mysql.TimestampColumn("last_update")
		allColumns           = mysql.ColumnList{StoreIDColumn, ManagerStaffIDColumn, AddressIDColumn, LastUpdateColumn}
		mutableColumns       = mysql.ColumnList{ManagerStaffIDColumn, AddressIDColumn, LastUpdateColumn}
	)

	return StoreTable{
		Table: mysql.NewTable("dvds", "store", allColumns...),

		//Columns
		StoreID:        StoreIDColumn,
		ManagerStaffID: ManagerStaffIDColumn,
		AddressID:      AddressIDColumn,
		LastUpdate:     LastUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/view/actor_info.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/mysql"
)

var ActorInfo = newActorInfoTable()

type ActorInfoTable struct {
	mysql.Table

	//Columns
	ActorID   mysql.ColumnInteger
	FirstName mysql.ColumnString
	LastName  mysql.ColumnString
	FilmInfo  mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new ActorInfoTable with assigned alias
func (a *ActorInfoTable) AS(alias string) ActorInfoTable {
	aliasTable := newActorInfoTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newActorInfoTable() ActorInfoTable {
	var (
		ActorIDColumn   = mysql.IntegerColumn("actor_id")
		FirstNameColumn = mysql.StringColumn("first_name")
		LastNameColumn  = mysql.StringColumn("last_name")
		FilmInfoColumn  = mysql.StringColumn("film_info")
		allColumns      = mysql.ColumnList{ActorIDColumn, FirstNameColumn, LastNameColumn, FilmInfoColumn}
		mutableColumns  = mysql.ColumnList{ActorIDColumn, FirstNameColumn, LastNameColumn, FilmInfoColumn}
	)

	return ActorInfoTable{
		Table: mysql.NewTable("dvds", "actor_info", allColumns...),

		//Columns
		ActorID:   ActorIDColumn,
		FirstName: FirstNameColumn,
		LastName:  LastNameColumn,
		FilmInfo:  FilmInfoColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/view/customer_list.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/mysql"
)

var CustomerList = newCustomerListTable()

type CustomerListTable struct {
	mysql.Table

	//Columns
	ID      mysql.ColumnInteger
	Name    mysql.ColumnString
	Address mysql.ColumnString
	ZipCode mysql.ColumnString
	Phone   mysql.ColumnString
	City    mysql.ColumnString
	Country mysql.ColumnString
	Notes   mysql.ColumnString
	Sid     mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new CustomerListTable with assigned alias
func (a *CustomerListTable) AS(alias string) CustomerListTable {
	aliasTable := newCustomerListTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newCustomerListTable() CustomerListTable {
	var (
		IDColumn       = mysql.IntegerColumn("ID")
		NameColumn     = mysql.StringColumn("name")
		AddressColumn  = mysql.StringColumn("address")
		ZipCodeColumn  = mysql.StringColumn("zip code")
		PhoneColumn    = mysql.StringColumn("phone")
		CityColumn     = mysql.StringColumn("city")
		CountryColumn  = mysql.StringColumn("country")
		NotesColumn    = mysql.StringColumn("notes")
		SidColumn      = mysql.IntegerColumn("SID")
		allColumns     = mysql.ColumnList{IDColumn, NameColumn, AddressColumn, ZipCodeColumn, PhoneColumn, CityColumn, CountryColumn, NotesColumn, SidColumn}
		mutableColumns = mysql.ColumnList{IDColumn, NameColumn, AddressColumn, ZipCodeColumn, PhoneColumn, CityColumn, CountryColumn, NotesColumn, SidColumn}
	)

	return CustomerListTable{
		Table: mysql.NewTable("dvds", "customer_list", allColumns...),

		//Columns
		ID:      IDColumn,
		Name:    NameColumn,
		Address: AddressColumn,
		ZipCode: ZipCodeColumn,
		Phone:   PhoneColumn,
		City:    CityColumn,
		Country: CountryColumn,
		Notes:   NotesColumn,
		Sid:     SidColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/view/film_list.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FilmList = newFilmListTable()

type FilmListTable struct {
	mysql.Table

	//Columns
	Fid         mysql.ColumnInteger
	Title       mysql.ColumnString
	Description mysql.ColumnString
	Category    mysql.ColumnString
	Price       mysql.ColumnFloat
	Length      mysql.ColumnInteger
	Rating      mysql.ColumnString
	Actors      mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new FilmListTable with assigned alias
func (a *FilmListTable) AS(alias string) FilmListTable {
	aliasTable := newFilmListTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newFilmListTable() FilmListTable {
	var (
		FidColumn         = mysql.IntegerColumn("FID")
		TitleColumn       = mysql.StringColumn("title")
		DescriptionColumn = mysql.StringColumn("description")
		CategoryColumn    = mysql.StringColumn("category")
		PriceColumn       = mysql.FloatColumn("price")
		LengthColumn      = mysql.IntegerColumn("length")
		RatingColumn      = mysql.StringColumn("rating")
		ActorsColumn      = mysql.StringColumn("actors")
		allColumns        = mysql.ColumnList{FidColumn, TitleColumn, DescriptionColumn, CategoryColumn, PriceColumn, LengthColumn, RatingColumn, ActorsColumn}
		mutableColumns    = mysql.ColumnList{FidColumn, TitleColumn, DescriptionColumn, CategoryColumn, PriceColumn, LengthColumn, RatingColumn, ActorsColumn}
	)

	return FilmListTable{
		Table: mysql.NewTable("dvds", "film_list", allColumns...),

		//Columns
		Fid:         FidColumn,
		Title:       TitleColumn,
		Description: DescriptionColumn,
		Category:    CategoryColumn,
		Price:       PriceColumn,
		Length:      LengthColumn,
		Rating:      RatingColumn,
		Actors:      ActorsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/view/nicer_but_slower_film_list.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/mysql"
)

var NicerButSlowerFilmList = newNicerButSlowerFilmListTable()

type NicerButSlowerFilmListTable struct {
	mysql.Table

	//Columns
	Fid         mysql.ColumnInteger
	Title       mysql.ColumnString
	Description mysql.ColumnString
	Category    mysql.ColumnString
	Price       mysql.ColumnFloat
	Length      mysql.ColumnInteger
	Rating      mysql.ColumnString
	Actors      mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new NicerButSlowerFilmListTable with assigned alias
func (a *NicerButSlowerFilmListTable) AS(alias string) NicerButSlowerFilmListTable {
	aliasTable := newNicerButSlowerFilmListTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newNicerButSlowerFilmListTable() NicerButSlowerFilmListTable {
	var (
		FidColumn         = mysql.IntegerColumn("FID")
		TitleColumn       = mysql.StringColumn("title")
		DescriptionColumn = mysql.StringColumn("description")
		CategoryColumn    = mysql.StringColumn("category")
		PriceColumn       = mysql.FloatColumn("price")
		LengthColumn      = mysql.IntegerColumn("length")
		RatingColumn      = mysql.StringColumn("rating")
		ActorsColumn      = mysql.StringColumn("actors")
		allColumns        = mysql.ColumnList{FidColumn, TitleColumn, DescriptionColumn, CategoryColumn, PriceColumn, LengthColumn, RatingColumn, ActorsColumn}
		mutableColumns    = mysql.ColumnList{FidColumn, TitleColumn, DescriptionColumn, CategoryColumn, PriceColumn, LengthColumn, RatingColumn, ActorsColumn}
	)

	return NicerButSlowerFilmListTable{
		Table: mysql.NewTable("dvds", "nicer_but_slower_film_list", allColumns...),

		//Columns
		Fid:         FidColumn,
		Title:       TitleColumn,
		Description: DescriptionColumn,
		Category:    CategoryColumn,
		Price:       PriceColumn,
		Length:      LengthColumn,
		Rating:      RatingColumn,
		Actors:      ActorsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/view/sales_by_film_category.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/mysql"
)

var SalesByFilmCategory = newSalesByFilmCategoryTable()

type SalesByFilmCategoryTable struct {
	mysql.Table

	//Columns
	Category   mysql.ColumnString
	TotalSales mysql.ColumnFloat

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new SalesByFilmCategoryTable with assigned alias
func (a *SalesByFilmCategoryTable) AS(alias string) SalesByFilmCategoryTable {
	aliasTable := newSalesByFilmCategoryTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newSalesByFilmCategoryTable() SalesByFilmCategoryTable {
	var (
		CategoryColumn   = mysql.StringColumn("category")
		TotalSalesColumn = mysql.FloatColumn("total_sales")
		allColumns       = mysql.ColumnList{CategoryColumn, TotalSalesColumn}
		mutableColumns   = mysql.ColumnList{CategoryColumn, TotalSalesColumn}
	)

	return SalesByFilmCategoryTable{
		Table: mysql.NewTable("dvds", "sales_by_film_category", allColumns...),

		//Columns
		Category:   CategoryColumn,
		TotalSales: TotalSalesColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/view/sales_by_store.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/mysql"
)

var SalesByStore = newSalesByStoreTable()

type SalesByStoreTable struct {
	mysql.Table

	//Columns
	Store      mysql.ColumnString
	Manager    mysql.ColumnString
	TotalSales mysql.ColumnFloat

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new SalesByStoreTable with assigned alias
func (a *SalesByStoreTable) AS(alias string) SalesByStoreTable {
	aliasTable := newSalesByStoreTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newSalesByStoreTable() SalesByStoreTable {
	var (
		StoreColumn      = mysql.StringColumn("store")
		ManagerColumn    = mysql.StringColumn("manager")
		TotalSalesColumn = mysql.FloatColumn("total_sales")
		allColumns       = mysql.ColumnList{StoreColumn, ManagerColumn, TotalSalesColumn}
		mutableColumns   = mysql.ColumnList{StoreColumn, ManagerColumn, TotalSalesColumn}
	)

	return SalesByStoreTable{
		Table: mysql.NewTable("dvds", "sales_by_store", allColumns...),

		//Columns
		Store:      StoreColumn,
		Manager:    ManagerColumn,
		TotalSales: TotalSalesColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key: "/view/staff_list.go",
		Value: `//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/mysql"
)

var StaffList = newStaffListTable()

type StaffListTable struct {
	mysql.Table

	//Columns
	ID      mysql.ColumnInteger
	Name    mysql.ColumnString
	Address mysql.ColumnString
	ZipCode mysql.ColumnString
	Phone   mysql.ColumnString
	City    mysql.ColumnString
	Country mysql.ColumnString
	Sid     mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new StaffListTable with assigned alias
func (a *StaffListTable) AS(alias string) StaffListTable {
	aliasTable := newStaffListTable()
	aliasTable.Table.ALIAS(alias)
	return aliasTable
}

func newStaffListTable() StaffListTable {
	var (
		IDColumn       = mysql.IntegerColumn("ID")
		NameColumn     = mysql.StringColumn("name")
		AddressColumn  = mysql.StringColumn("address")
		ZipCodeColumn  = mysql.StringColumn("zip code")
		PhoneColumn    = mysql.StringColumn("phone")
		CityColumn     = mysql.StringColumn("city")
		CountryColumn  = mysql.StringColumn("country")
		SidColumn      = mysql.IntegerColumn("SID")
		allColumns     = mysql.ColumnList{IDColumn, NameColumn, AddressColumn, ZipCodeColumn, PhoneColumn, CityColumn, CountryColumn, SidColumn}
		mutableColumns = mysql.ColumnList{IDColumn, NameColumn, AddressColumn, ZipCodeColumn, PhoneColumn, CityColumn, CountryColumn, SidColumn}
	)

	return StaffListTable{
		Table: mysql.NewTable("dvds", "staff_list", allColumns...),

		//Columns
		ID:      IDColumn,
		Name:    NameColumn,
		Address: AddressColumn,
		ZipCode: ZipCodeColumn,
		Phone:   PhoneColumn,
		City:    CityColumn,
		Country: CountryColumn,
		Sid:     SidColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
`,
	}, {
		Key:   "fileNames",
		Value: []string{"/enum/film_list_rating.go", "/enum/film_rating.go", "/enum/nicer_but_slower_film_list_rating.go", "/model/actor.go", "/model/actor_info.go", "/model/address.go", "/model/category.go", "/model/city.go", "/model/country.go", "/model/customer.go", "/model/customer_list.go", "/model/film.go", "/model/film_actor.go", "/model/film_category.go", "/model/film_list.go", "/model/film_list_rating.go", "/model/film_rating.go", "/model/film_text.go", "/model/inventory.go", "/model/language.go", "/model/nicer_but_slower_film_list.go", "/model/nicer_but_slower_film_list_rating.go", "/model/payment.go", "/model/rental.go", "/model/sales_by_film_category.go", "/model/sales_by_store.go", "/model/staff.go", "/model/staff_list.go", "/model/store.go", "/table/actor.go", "/table/address.go", "/table/category.go", "/table/city.go", "/table/country.go", "/table/customer.go", "/table/film.go", "/table/film_actor.go", "/table/film_category.go", "/table/film_text.go", "/table/inventory.go", "/table/language.go", "/table/payment.go", "/table/rental.go", "/table/staff.go", "/table/store.go", "/view/actor_info.go", "/view/customer_list.go", "/view/film_list.go", "/view/nicer_but_slower_film_list.go", "/view/sales_by_film_category.go", "/view/sales_by_store.go", "/view/staff_list.go"},
	}})
}
