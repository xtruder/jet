// Code generated by testparrot. DO NOT EDIT.

package postgres

import gotestparrot "github.com/xtruder/go-testparrot"

func init() {
	gotestparrot.R.Load("TestCROSS_JOIN", []gotestparrot.Recording{{
		Key:   0,
		Value: "db.table1 CROSS JOIN db.table2",
	}, {
		Key:   1,
		Value: "db.table1 CROSS JOIN db.table2 CROSS JOIN db.table3",
	}})
	gotestparrot.R.Load("TestFULL_JOIN", []gotestparrot.Recording{{
		Key:   0,
		Value: "db.table1 FULL JOIN db.table2 ON (table1.col_int = table2.col_int)",
	}, {
		Key:   1,
		Value: "db.table1 FULL JOIN db.table2 ON (table1.col_int = table2.col_int) FULL JOIN db.table3 ON (table1.col_int = table3.col_int)",
	}, {
		Key:   2,
		Value: "db.table1 FULL JOIN db.table2 ON (table1.col_int = $1) FULL JOIN db.table3 ON (table1.col_int = $2)",
	}, {
		Key:   3,
		Value: []interface{}{int64(1), int64(2)},
	}})
	gotestparrot.R.Load("TestINNER_JOIN", []gotestparrot.Recording{{
		Key:   0,
		Value: "db.table1 INNER JOIN db.table2 ON (table1.col_int = table2.col_int)",
	}, {
		Key:   1,
		Value: "db.table1 INNER JOIN db.table2 ON (table1.col_int = table2.col_int) INNER JOIN db.table3 ON (table1.col_int = table3.col_int)",
	}, {
		Key:   2,
		Value: "db.table1 INNER JOIN db.table2 ON (table1.col_int = $1) INNER JOIN db.table3 ON (table1.col_int = $2)",
	}, {
		Key:   3,
		Value: []interface{}{int64(1), int64(2)},
	}})
	gotestparrot.R.Load("TestLEFT_JOIN", []gotestparrot.Recording{{
		Key:   0,
		Value: "db.table1 LEFT JOIN db.table2 ON (table1.col_int = table2.col_int)",
	}, {
		Key:   1,
		Value: "db.table1 LEFT JOIN db.table2 ON (table1.col_int = table2.col_int) LEFT JOIN db.table3 ON (table1.col_int = table3.col_int)",
	}, {
		Key:   2,
		Value: "db.table1 LEFT JOIN db.table2 ON (table1.col_int = $1) LEFT JOIN db.table3 ON (table1.col_int = $2)",
	}, {
		Key:   3,
		Value: []interface{}{int64(1), int64(2)},
	}})
	gotestparrot.R.Load("TestRIGHT_JOIN", []gotestparrot.Recording{{
		Key:   0,
		Value: "db.table1 RIGHT JOIN db.table2 ON (table1.col_int = table2.col_int)",
	}, {
		Key:   1,
		Value: "db.table1 RIGHT JOIN db.table2 ON (table1.col_int = table2.col_int) RIGHT JOIN db.table3 ON (table1.col_int = table3.col_int)",
	}, {
		Key:   2,
		Value: "db.table1 RIGHT JOIN db.table2 ON (table1.col_int = $1) RIGHT JOIN db.table3 ON (table1.col_int = $2)",
	}, {
		Key:   3,
		Value: []interface{}{int64(1), int64(2)},
	}})
}
